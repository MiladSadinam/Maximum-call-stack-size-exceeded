import { Injectable, NgZone, Injector } from '@angular/core';
import { HttpClient, HttpParams, HttpErrorResponse, HttpResponse } from '@angular/common/http';
import { Router } from '@angular/router';
import { ApiBase, INITIALIZED_IN_BACKEND, NullableInDraftMode } from '@plano/shared/api/base/api-base';
import { Id } from '@plano/shared/api/base/id';
import { Meta } from '@plano/shared/api/base/meta';
import { ApiAttributeInfo } from '@plano/shared/api/base/api-attribute-info';
import { PApiPrimitiveTypes } from '@plano/shared/api/base/generated-types.ag';
import { ApiSaveArgs, ApiLoadArgs, ShiftId, ShiftSelector, ApiListWrapper, SchedulingApiPosSystem, SchedulingApiBooking, SchedulingApiAccountHolderState, ApiObjectWrapper, AuthenticatedApiRole } from '@plano/shared/api';
import { DateTime, Date, DateExclusiveEnd, LocalTime, Duration, Minutes, Hours, Days, Months, Years, Percent, Email, Search, Tel, Currency, Password, PostalCode, Integer, Url, Iban, Bic, Image } from '@plano/shared/api/base/generated-types.ag';
import { Config } from '@plano/shared/core/config';
import { AbstractControl } from '@angular/forms';
import { ApiErrorService } from '@plano/shared/api/api-error.service';



/**
 * This service enables access to the api "export_shift_exchange_statistics_excel".
 * This file is auto generated by de.sage.scheduler.api_generator.ApiGenerator.
 */

// constants
class Consts
{
	SHIFT_EXCHANGE_IDS = 1;
	MEMBER_IDS = 2;
	SHIFT_MODEL_IDS = 3;
}


@Injectable({
  providedIn: 'root',
})
export class ExportShiftExchangeStatisticsExcelApiService<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiBase
{
	consts = new Consts();

	constructor(h : HttpClient
			,	router : Router
			,	apiE : ApiErrorService
			,	zone : NgZone
			,	injector : Injector) {
		super(h, router, apiE, zone, injector, 'export_shift_exchange_statistics_excel');
	}

	protected version() : string {
		return '98b454c631894a7585854129a3cf8ec1,c81ba5d3c61ccf788ed18aaa79e2bc82';
	}

	private dataWrapper = new ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>(this);

	get data() : ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode> {
		return this.dataWrapper;
	}

	protected getRootWrapper() : ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode> {
		return this.dataWrapper;
	}

	protected recreateRootWrapper() : void {
		this.dataWrapper = new ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>(this);
	}
}

		 
export class ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	

	constructor(override readonly api : ExportShiftExchangeStatisticsExcelApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, ExportShiftExchangeStatisticsExcelApiRoot as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.shiftExchangeIdsWrapper.parent = this as any as ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>;
		this.memberIdsWrapper.parent = this as any as ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>;
		this.shiftModelIdsWrapper.parent = this as any as ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>, ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>> = new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>, ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>,
			name: '',
			id: 'ROOT',
			show: function(this : ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>) {
		if(!((this.api!.rightsService.hasManagerRights)))
		{
			return false;
		}
				return true;
			},
			canEdit: function(this : ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>) {
		if(!((this.api!.rightsService.hasManagerRights)))
		{
			return false;
		}
				return true;
			},
			readMode: function(this : ExportShiftExchangeStatisticsExcelApiRoot<ValidationMode>) {
				 
		
				return false;
			},
		});

	private shiftExchangeIdsWrapper : ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode> = new ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>(this.api, false);

	/**
     *  Id list of the shifts to be exported.
     */
	get shiftExchangeIds() : ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode> {
		return this.shiftExchangeIdsWrapper;
	}

	set shiftExchangeIdsTestSetter(v : ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'shiftExchangeIds', () => {this.shiftExchangeIdsWrapper = v;});
	}

	private memberIdsWrapper : ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode> = new ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>(this.api, false);

	/**
     *  Id list of the members to be exported.
     */
	get memberIds() : ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode> {
		return this.memberIdsWrapper;
	}

	set memberIdsTestSetter(v : ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'memberIds', () => {this.memberIdsWrapper = v;});
	}

	private shiftModelIdsWrapper : ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode> = new ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>(this.api, false);

	/**
     *  Id list of the shift model to be exported.
     */
	get shiftModelIds() : ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode> {
		return this.shiftModelIdsWrapper;
	}

	set shiftModelIdsTestSetter(v : ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>) {
        this.setterImpl(3, v.rawData, 'shiftModelIds', () => {this.shiftModelIdsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.shiftExchangeIdsWrapper._fixIds(_idReplacements);
		this.memberIdsWrapper._fixIds(_idReplacements);
		this.shiftModelIdsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 4);

			if(data[1] === null)
				data[1] = Meta.createNewList();
			if(data[2] === null)
				data[2] = Meta.createNewList();
			if(data[3] === null)
				data[3] = Meta.createNewList();
		}

		// propagate new raw data to children
		this.shiftExchangeIdsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.memberIdsWrapper._updateRawData(data ? data[2] : null, generateMissingData);
		this.shiftModelIdsWrapper._updateRawData(data ? data[3] : null, generateMissingData);
	}

	protected get dni() : string {
		return '1';
	}

	static loadDetailed(	api : ExportShiftExchangeStatisticsExcelApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '1', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is ExportShiftExchangeStatisticsExcelApiRoot<'validated'> {
		// TODO: PLANO-151346
	}
}

		 export class ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiListWrapper<any>
{
	override parent : any = null;

	constructor(override readonly api : ExportShiftExchangeStatisticsExcelApiService<ValidationMode> | null, removeDestroyedItems : boolean) {
		super(api, removeDestroyedItems, 'shiftExchangeIds');
	}

	override wrapItem(item : any, _generateMissingData : boolean) : Id {
		return Id.create(item);
	}

	protected containsPrimitives() : boolean {
		return false;
	}

	protected containsIds() : boolean {
		return true;
	}

	protected createInstance(removeDestroyedItems : boolean) : ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode> {
		return new ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>(this.api, removeDestroyedItems);
	}

	protected get dni() : string {
		return '2';
	}

	override createNewItem() : Id {
		const newItemRaw = null;

		const newItem = this.wrapItem(newItemRaw, true);
		this.push(newItem);

		if(this.api)
			this.api.changed('shiftExchangeIds');

		return newItem;
	}

	override attributeInfoThis : ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>, ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>> = new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>, ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>,
			name: 'shiftExchangeIds',
			id: 'SHIFT_EXCHANGE_IDS',
			primitiveType: PApiPrimitiveTypes.ApiList,
		});
	attributeInfoShiftExchangeId =  new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>, Id>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiShiftExchangeIds<ValidationMode>,
			name: 'shiftExchangeId',
			id: 'SHIFT_EXCHANGE_ID',
			primitiveType: PApiPrimitiveTypes.Id,
		});
}

				 export class ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiListWrapper<any>
{
	override parent : any = null;

	constructor(override readonly api : ExportShiftExchangeStatisticsExcelApiService<ValidationMode> | null, removeDestroyedItems : boolean) {
		super(api, removeDestroyedItems, 'memberIds');
	}

	override wrapItem(item : any, _generateMissingData : boolean) : Id {
		return Id.create(item);
	}

	protected containsPrimitives() : boolean {
		return false;
	}

	protected containsIds() : boolean {
		return true;
	}

	protected createInstance(removeDestroyedItems : boolean) : ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode> {
		return new ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>(this.api, removeDestroyedItems);
	}

	protected get dni() : string {
		return '3';
	}

	override createNewItem() : Id {
		const newItemRaw = null;

		const newItem = this.wrapItem(newItemRaw, true);
		this.push(newItem);

		if(this.api)
			this.api.changed('memberIds');

		return newItem;
	}

	override attributeInfoThis : ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>, ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>> = new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>, ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>,
			name: 'memberIds',
			id: 'MEMBER_IDS',
			primitiveType: PApiPrimitiveTypes.ApiList,
		});
	attributeInfoMemberId =  new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>, Id>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiMemberIds<ValidationMode>,
			name: 'memberId',
			id: 'MEMBER_ID',
			primitiveType: PApiPrimitiveTypes.Id,
		});
}

				 export class ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiListWrapper<any>
{
	override parent : any = null;

	constructor(override readonly api : ExportShiftExchangeStatisticsExcelApiService<ValidationMode> | null, removeDestroyedItems : boolean) {
		super(api, removeDestroyedItems, 'shiftModelIds');
	}

	override wrapItem(item : any, _generateMissingData : boolean) : Id {
		return Id.create(item);
	}

	protected containsPrimitives() : boolean {
		return false;
	}

	protected containsIds() : boolean {
		return true;
	}

	protected createInstance(removeDestroyedItems : boolean) : ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode> {
		return new ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>(this.api, removeDestroyedItems);
	}

	protected get dni() : string {
		return '4';
	}

	override createNewItem() : Id {
		const newItemRaw = null;

		const newItem = this.wrapItem(newItemRaw, true);
		this.push(newItem);

		if(this.api)
			this.api.changed('shiftModelIds');

		return newItem;
	}

	override attributeInfoThis : ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>, ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>> = new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>, ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>,
			name: 'shiftModelIds',
			id: 'SHIFT_MODEL_IDS',
			primitiveType: PApiPrimitiveTypes.ApiList,
		});
	attributeInfoShiftModelId =  new ApiAttributeInfo<ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>, Id>({
			apiObjWrapper: this as any as ExportShiftExchangeStatisticsExcelApiShiftModelIds<ValidationMode>,
			name: 'shiftModelId',
			id: 'SHIFT_MODEL_ID',
			primitiveType: PApiPrimitiveTypes.Id,
		});
}

		

