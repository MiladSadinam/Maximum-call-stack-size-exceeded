import { Injectable, NgZone, Injector } from '@angular/core';
import { HttpClient, HttpParams, HttpErrorResponse, HttpResponse } from '@angular/common/http';
import { Router } from '@angular/router';
import { ApiBase, INITIALIZED_IN_BACKEND, NullableInDraftMode } from '@plano/shared/api/base/api-base';
import { Id } from '@plano/shared/api/base/id';
import { Meta } from '@plano/shared/api/base/meta';
import { ApiAttributeInfo } from '@plano/shared/api/base/api-attribute-info';
import { PApiPrimitiveTypes } from '@plano/shared/api/base/generated-types.ag';
import { ApiSaveArgs, ApiLoadArgs, ShiftId, ShiftSelector, ApiListWrapper, SchedulingApiPosSystem, SchedulingApiBooking, SchedulingApiAccountHolderState, ApiObjectWrapper, AuthenticatedApiRole } from '@plano/shared/api';
import { DateTime, Date, DateExclusiveEnd, LocalTime, Duration, Minutes, Hours, Days, Months, Years, Percent, Email, Search, Tel, Currency, Password, PostalCode, Integer, Url, Iban, Bic, Image } from '@plano/shared/api/base/generated-types.ag';
import { Config } from '@plano/shared/core/config';
import { AbstractControl } from '@angular/forms';
import { ApiErrorService } from '@plano/shared/api/api-error.service';



/**
 * This service enables access to the api "testing/story_book".
 * This file is auto generated by de.sage.scheduler.api_generator.ApiGenerator.
 */

// constants
class Consts
{
	ALL_TYPES = 1;
	IS_NULL = 2;
	VALIDATIONS = 3;
	ALL_TYPES_BOOLEAN = 1;
	ALL_TYPES_NUMBER = 2;
	ALL_TYPES_INTEGER = 3;
	ALL_TYPES_CURRENCY = 4;
	ALL_TYPES_STRING = 5;
	ALL_TYPES_TEL = 6;
	ALL_TYPES_EMAIL = 7;
	ALL_TYPES_PASSWORD = 8;
	ALL_TYPES_POSTAL_CODE = 9;
	ALL_TYPES_SEARCH = 10;
	ALL_TYPES_URL = 11;
	ALL_TYPES_IBAN = 12;
	ALL_TYPES_BIC = 13;
	ALL_TYPES_DATE_TIME = 14;
	ALL_TYPES_DATE = 15;
	ALL_TYPES_DATE_EXCLUSIVE_END = 16;
	ALL_TYPES_MINUTES = 17;
	ALL_TYPES_HOURS = 18;
	ALL_TYPES_DAYS = 19;
	ALL_TYPES_MONTHS = 20;
	ALL_TYPES_YEARS = 21;
	ALL_TYPES_DURATION = 22;
	ALL_TYPES_LOCAL_TIME = 23;
	ALL_TYPES_ENUM = 24;
	ALL_TYPES_IMAGE = 25;
	IS_NULL_BOOLEAN = 1;
	IS_NULL_NUMBER = 2;
	IS_NULL_INTEGER = 3;
	IS_NULL_CURRENCY = 4;
	IS_NULL_STRING = 5;
	IS_NULL_TEL = 6;
	IS_NULL_EMAIL = 7;
	IS_NULL_PASSWORD = 8;
	IS_NULL_POSTAL_CODE = 9;
	IS_NULL_SEARCH = 10;
	IS_NULL_URL = 11;
	IS_NULL_IBAN = 12;
	IS_NULL_BIC = 13;
	IS_NULL_DATE_TIME = 14;
	IS_NULL_DATE = 15;
	IS_NULL_DATE_EXCLUSIVE_END = 16;
	IS_NULL_MINUTES = 17;
	IS_NULL_HOURS = 18;
	IS_NULL_DAYS = 19;
	IS_NULL_MONTHS = 20;
	IS_NULL_YEARS = 21;
	IS_NULL_DURATION = 22;
	IS_NULL_LOCAL_TIME = 23;
	IS_NULL_ENUM = 24;
	VALIDATIONS_TEL = 1;
	VALIDATIONS_EMAIL = 2;
	VALIDATIONS_PASSWORD = 3;
	VALIDATIONS_POSTAL_CODE = 4;
	VALIDATIONS_URL = 5;
	VALIDATIONS_IBAN = 6;
	VALIDATIONS_BIC = 7;
	VALIDATIONS_CURRENCY = 8;
	VALIDATIONS_INTEGER = 9;
	VALIDATIONS_REQUIRED = 10;
	VALIDATIONS_MIN = 11;
	VALIDATIONS_MAX = 12;
	VALIDATIONS_TEL_FAILS = 1;
	VALIDATIONS_TEL_FAILS_BAD_VALUE = 1;
	VALIDATIONS_EMAIL_FAILS = 1;
	VALIDATIONS_EMAIL_FAILS_NO_AT = 1;
	VALIDATIONS_EMAIL_FAILS_BAD_VALUE = 2;
	VALIDATIONS_PASSWORD_FAILS = 1;
	VALIDATIONS_PASSWORD_FAILS_TOO_SHORT = 1;
	VALIDATIONS_PASSWORD_FAILS_NEEDS_DIGITS = 2;
	VALIDATIONS_POSTAL_CODE_FAILS = 1;
	VALIDATIONS_POSTAL_CODE_FAILS_TOO_LONG = 1;
	VALIDATIONS_POSTAL_CODE_FAILS_TOO_SHORT = 2;
	VALIDATIONS_URL_FAILS = 1;
	VALIDATIONS_URL_FAILS_PROTOCOL_MISSING = 1;
	VALIDATIONS_URL_FAILS_WWW = 2;
	VALIDATIONS_URL_FAILS_BAD_VALUE = 3;
	VALIDATIONS_URL_FAILS_WHITESPACE = 4;
	VALIDATIONS_IBAN_FAILS = 1;
	VALIDATIONS_IBAN_FAILS_BAD_VALUE = 1;
	VALIDATIONS_BIC_FAILS = 1;
	VALIDATIONS_BIC_FAILS_BAD_VALUE = 1;
	VALIDATIONS_CURRENCY_FAILS = 1;
	VALIDATIONS_CURRENCY_FAILS_TOO_MANY_DIGITS = 1;
	VALIDATIONS_INTEGER_FAILS = 1;
	VALIDATIONS_INTEGER_FAILS_BAD_VALUE_HOURS = 1;
	VALIDATIONS_INTEGER_FAILS_BAD_VALUE_INTEGER = 2;
	VALIDATIONS_REQUIRED_VALID = 1;
	VALIDATIONS_REQUIRED_FAILS = 2;
	VALIDATIONS_REQUIRED_VALID_NUMBER = 1;
	VALIDATIONS_REQUIRED_VALID_INTEGER = 2;
	VALIDATIONS_REQUIRED_VALID_CURRENCY = 3;
	VALIDATIONS_REQUIRED_VALID_STRING = 4;
	VALIDATIONS_REQUIRED_VALID_TEL = 5;
	VALIDATIONS_REQUIRED_VALID_EMAIL = 6;
	VALIDATIONS_REQUIRED_VALID_PASSWORD = 7;
	VALIDATIONS_REQUIRED_VALID_POSTAL_CODE = 8;
	VALIDATIONS_REQUIRED_VALID_SEARCH = 9;
	VALIDATIONS_REQUIRED_VALID_URL = 10;
	VALIDATIONS_REQUIRED_VALID_IBAN = 11;
	VALIDATIONS_REQUIRED_VALID_BIC = 12;
	VALIDATIONS_REQUIRED_VALID_DATE_TIME = 13;
	VALIDATIONS_REQUIRED_VALID_DATE = 14;
	VALIDATIONS_REQUIRED_VALID_DATE_EXCLUSIVE_END = 15;
	VALIDATIONS_REQUIRED_VALID_MINUTES = 16;
	VALIDATIONS_REQUIRED_VALID_HOURS = 17;
	VALIDATIONS_REQUIRED_VALID_DAYS = 18;
	VALIDATIONS_REQUIRED_VALID_MONTHS = 19;
	VALIDATIONS_REQUIRED_VALID_YEARS = 20;
	VALIDATIONS_REQUIRED_VALID_DURATION = 21;
	VALIDATIONS_REQUIRED_VALID_LOCAL_TIME = 22;
	VALIDATIONS_REQUIRED_VALID_ENUM = 23;
	VALIDATIONS_REQUIRED_FAILS_NUMBER = 1;
	VALIDATIONS_REQUIRED_FAILS_INTEGER = 2;
	VALIDATIONS_REQUIRED_FAILS_CURRENCY = 3;
	VALIDATIONS_REQUIRED_FAILS_STRING = 4;
	VALIDATIONS_REQUIRED_FAILS_TEL = 5;
	VALIDATIONS_REQUIRED_FAILS_EMAIL = 6;
	VALIDATIONS_REQUIRED_FAILS_PASSWORD = 7;
	VALIDATIONS_REQUIRED_FAILS_POSTAL_CODE = 8;
	VALIDATIONS_REQUIRED_FAILS_SEARCH = 9;
	VALIDATIONS_REQUIRED_FAILS_URL = 10;
	VALIDATIONS_REQUIRED_FAILS_IBAN = 11;
	VALIDATIONS_REQUIRED_FAILS_BIC = 12;
	VALIDATIONS_REQUIRED_FAILS_DATE_TIME = 13;
	VALIDATIONS_REQUIRED_FAILS_DATE = 14;
	VALIDATIONS_REQUIRED_FAILS_DATE_EXCLUSIVE_END = 15;
	VALIDATIONS_REQUIRED_FAILS_MINUTES = 16;
	VALIDATIONS_REQUIRED_FAILS_HOURS = 17;
	VALIDATIONS_REQUIRED_FAILS_DAYS = 18;
	VALIDATIONS_REQUIRED_FAILS_MONTHS = 19;
	VALIDATIONS_REQUIRED_FAILS_YEARS = 20;
	VALIDATIONS_REQUIRED_FAILS_DURATION = 21;
	VALIDATIONS_REQUIRED_FAILS_LOCAL_TIME = 22;
	VALIDATIONS_REQUIRED_FAILS_ENUM = 23;
	VALIDATIONS_REQUIRED_FAILS_IMAGE = 24;
	VALIDATIONS_MIN_VALID = 1;
	VALIDATIONS_MIN_FAILS = 2;
	VALIDATIONS_MIN_VALID_COMPARE_CONST = 1;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_NUMBER_IS_EQUAL = 1;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_NUMBER_THIS_IS_NULL = 2;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_NUMBER_OTHER_IS_NULL = 3;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_INTEGER_IS_EQUAL = 4;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_INTEGER_THIS_IS_NULL = 5;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_INTEGER_OTHER_IS_NULL = 6;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_CURRENCY_IS_EQUAL = 7;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_CURRENCY_THIS_IS_NULL = 8;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_CURRENCY_OTHER_IS_NULL = 9;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_IS_NEGATIVE = 10;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_TIME_IS_EQUAL = 11;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_TIME_THIS_IS_NULL = 12;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_TIME_OTHER_IS_NULL = 13;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_IS_EQUAL = 14;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_THIS_IS_NULL = 15;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_OTHER_IS_NULL = 16;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_IS_EQUAL = 17;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_THIS_IS_NULL = 18;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_OTHER_IS_NULL = 19;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_MINUTES_IS_EQUAL = 20;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_MINUTES_THIS_IS_NULL = 21;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_MINUTES_OTHER_IS_NULL = 22;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_HOURS_IS_EQUAL = 23;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_HOURS_THIS_IS_NULL = 24;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_HOURS_OTHER_IS_NULL = 25;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DAYS_IS_EQUAL = 26;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DAYS_THIS_IS_NULL = 27;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DAYS_OTHER_IS_NULL = 28;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_MONTHS_IS_EQUAL = 29;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_MONTHS_THIS_IS_NULL = 30;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_MONTHS_OTHER_IS_NULL = 31;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_YEARS_IS_EQUAL = 32;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_YEARS_THIS_IS_NULL = 33;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_YEARS_OTHER_IS_NULL = 34;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DURATION_IS_EQUAL = 35;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DURATION_THIS_IS_NULL = 36;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_DURATION_OTHER_IS_NULL = 37;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_LOCAL_TIME_IS_EQUAL = 38;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_LOCAL_TIME_THIS_IS_NULL = 39;
	VALIDATIONS_MIN_VALID_COMPARE_CONST_LOCAL_TIME_OTHER_IS_NULL = 40;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST = 1;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE = 2;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_NUMBER = 1;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_NUMBER_EQUAL_NOT_ALLOWED = 2;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_INTEGER = 3;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_INTEGER_EQUAL_NOT_ALLOWED = 4;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_CURRENCY = 5;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_CURRENCY_EQUAL_NOT_ALLOWED = 6;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_TIME = 7;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_TIME_EQUAL_NOT_ALLOWED = 8;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE = 9;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_EQUAL_NOT_ALLOWED = 10;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END = 11;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END_EQUAL_NOT_ALLOWED = 12;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_MINUTES = 13;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_MINUTES_EQUAL_NOT_ALLOWED = 14;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_HOURS = 15;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_HOURS_EQUAL_NOT_ALLOWED = 16;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DAYS = 17;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DAYS_EQUAL_NOT_ALLOWED = 18;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_MONTHS = 19;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_MONTHS_EQUAL_NOT_ALLOWED = 20;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_YEARS = 21;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_YEARS_EQUAL_NOT_ALLOWED = 22;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DURATION = 23;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_DURATION_EQUAL_NOT_ALLOWED = 24;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_LOCAL_TIME = 25;
	VALIDATIONS_MIN_FAILS_COMPARE_CONST_LOCAL_TIME_EQUAL_NOT_ALLOWED = 26;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE = 1;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_NUMBER = 2;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE = 3;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_INTEGER = 4;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE = 5;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_CURRENCY = 6;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE = 7;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_TIME = 8;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_COMPARED_NODE = 9;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE = 10;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE = 11;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END = 12;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE = 13;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_MINUTES = 14;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE = 15;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_HOURS = 16;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE = 17;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DAYS = 18;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE = 19;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_MONTHS = 20;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE = 21;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_YEARS = 22;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE = 23;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_DURATION = 24;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE = 25;
	VALIDATIONS_MIN_FAILS_COMPARE_NODE_LOCAL_TIME = 26;
	VALIDATIONS_MAX_VALID = 1;
	VALIDATIONS_MAX_FAILS = 2;
	VALIDATIONS_MAX_VALID_COMPARE_CONST = 1;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_NUMBER_IS_EQUAL = 1;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_NUMBER_THIS_IS_NULL = 2;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_NUMBER_OTHER_IS_NULL = 3;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_INTEGER_IS_EQUAL = 4;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_INTEGER_THIS_IS_NULL = 5;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_INTEGER_OTHER_IS_NULL = 6;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_CURRENCY_IS_EQUAL = 7;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_CURRENCY_THIS_IS_NULL = 8;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_CURRENCY_OTHER_IS_NULL = 9;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_TIME_IS_EQUAL = 10;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_TIME_THIS_IS_NULL = 11;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_TIME_OTHER_IS_NULL = 12;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_IS_EQUAL = 13;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_THIS_IS_NULL = 14;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_OTHER_IS_NULL = 15;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_IS_EQUAL = 16;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_THIS_IS_NULL = 17;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_OTHER_IS_NULL = 18;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_MINUTES_IS_EQUAL = 19;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_MINUTES_THIS_IS_NULL = 20;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_MINUTES_OTHER_IS_NULL = 21;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_HOURS_IS_EQUAL = 22;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_HOURS_THIS_IS_NULL = 23;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_HOURS_OTHER_IS_NULL = 24;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DAYS_IS_EQUAL = 25;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DAYS_THIS_IS_NULL = 26;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DAYS_OTHER_IS_NULL = 27;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_MONTHS_IS_EQUAL = 28;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_MONTHS_THIS_IS_NULL = 29;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_MONTHS_OTHER_IS_NULL = 30;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_YEARS_IS_EQUAL = 31;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_YEARS_THIS_IS_NULL = 32;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_YEARS_OTHER_IS_NULL = 33;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DURATION_IS_EQUAL = 34;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DURATION_THIS_IS_NULL = 35;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_DURATION_OTHER_IS_NULL = 36;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_LOCAL_TIME_IS_EQUAL = 37;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_LOCAL_TIME_THIS_IS_NULL = 38;
	VALIDATIONS_MAX_VALID_COMPARE_CONST_LOCAL_TIME_OTHER_IS_NULL = 39;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST = 1;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE = 2;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_NUMBER = 1;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_NUMBER_EQUAL_NOT_ALLOWED = 2;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_INTEGER = 3;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_INTEGER_EQUAL_NOT_ALLOWED = 4;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_CURRENCY = 5;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_CURRENCY_EQUAL_NOT_ALLOWED = 6;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_TIME = 7;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_TIME_EQUAL_NOT_ALLOWED = 8;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE = 9;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_EQUAL_NOT_ALLOWED = 10;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END = 11;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END_EQUAL_NOT_ALLOWED = 12;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_MINUTES = 13;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_MINUTES_EQUAL_NOT_ALLOWED = 14;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_HOURS = 15;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_HOURS_EQUAL_NOT_ALLOWED = 16;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DAYS = 17;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DAYS_EQUAL_NOT_ALLOWED = 18;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_MONTHS = 19;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_MONTHS_EQUAL_NOT_ALLOWED = 20;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_YEARS = 21;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_YEARS_EQUAL_NOT_ALLOWED = 22;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DURATION = 23;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_DURATION_EQUAL_NOT_ALLOWED = 24;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_LOCAL_TIME = 25;
	VALIDATIONS_MAX_FAILS_COMPARE_CONST_LOCAL_TIME_EQUAL_NOT_ALLOWED = 26;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE = 1;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_NUMBER = 2;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE = 3;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_INTEGER = 4;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE = 5;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_CURRENCY = 6;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE = 7;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_TIME = 8;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_COMPARED_NODE = 9;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE = 10;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE = 11;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END = 12;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE = 13;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_MINUTES = 14;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE = 15;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_HOURS = 16;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE = 17;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DAYS = 18;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE = 19;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_MONTHS = 20;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE = 21;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_YEARS = 22;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE = 23;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_DURATION = 24;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE = 25;
	VALIDATIONS_MAX_FAILS_COMPARE_NODE_LOCAL_TIME = 26;
}


@Injectable({
  providedIn: 'root',
})
export class StoryBookApiService<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiBase
{
	consts = new Consts();

	constructor(h : HttpClient
			,	router : Router
			,	apiE : ApiErrorService
			,	zone : NgZone
			,	injector : Injector) {
		super(h, router, apiE, zone, injector, 'testing/story_book');
	}

	protected version() : string {
		return '516f7e95c82389c96b2202a109c26c7b,abfb955fdaabb9034de0ddfa175892a0';
	}

	private dataWrapper = new StoryBookApiRoot<ValidationMode>(this);

	get data() : StoryBookApiRoot<ValidationMode> {
		return this.dataWrapper;
	}

	protected getRootWrapper() : StoryBookApiRoot<ValidationMode> {
		return this.dataWrapper;
	}

	protected recreateRootWrapper() : void {
		this.dataWrapper = new StoryBookApiRoot<ValidationMode>(this);
	}
}

		 
export class StoryBookApiRoot<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiRoot as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.allTypesWrapper.parent = this as any as StoryBookApiRoot<ValidationMode>;
		this.isNullWrapper.parent = this as any as StoryBookApiRoot<ValidationMode>;
		this.validationsWrapper.parent = this as any as StoryBookApiRoot<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiRoot<ValidationMode>, StoryBookApiRoot<ValidationMode>> = new ApiAttributeInfo<StoryBookApiRoot<ValidationMode>, StoryBookApiRoot<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiRoot<ValidationMode>,
			name: '',
			id: 'ROOT',
		});

	private allTypesWrapper : StoryBookApiAllTypes<ValidationMode> = new StoryBookApiAllTypes<ValidationMode>(this.api);

	/**
     *  A list of all available types.
     */
	get allTypes() : StoryBookApiAllTypes<ValidationMode> {
		return this.allTypesWrapper;
	}

	set allTypesTestSetter(v : StoryBookApiAllTypes<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'allTypes', () => {this.allTypesWrapper = v;});
	}

	private isNullWrapper : StoryBookApiIsNull<ValidationMode> = new StoryBookApiIsNull<ValidationMode>(this.api);

	/**
     *  A list of all available types having the appropriate "null" value.
     */
	get isNull() : StoryBookApiIsNull<ValidationMode> {
		return this.isNullWrapper;
	}

	set isNullTestSetter(v : StoryBookApiIsNull<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'isNull', () => {this.isNullWrapper = v;});
	}

	private validationsWrapper : StoryBookApiValidations<ValidationMode> = new StoryBookApiValidations<ValidationMode>(this.api);

	/**
     *  attributes concerning validation.
     */
	get validations() : StoryBookApiValidations<ValidationMode> {
		return this.validationsWrapper;
	}

	set validationsTestSetter(v : StoryBookApiValidations<ValidationMode>) {
        this.setterImpl(3, v.rawData, 'validations', () => {this.validationsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.allTypesWrapper._fixIds(_idReplacements);
		this.isNullWrapper._fixIds(_idReplacements);
		this.validationsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 4);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
			if(data[3] === null)
				data[3] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.allTypesWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.isNullWrapper._updateRawData(data ? data[2] : null, generateMissingData);
		this.validationsWrapper._updateRawData(data ? data[3] : null, generateMissingData);
	}

	protected get dni() : string {
		return '1';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '1', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiRoot<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiAllTypes<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiAllTypes as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, StoryBookApiAllTypes<ValidationMode>> = new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, StoryBookApiAllTypes<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'allTypes',
			id: 'ALL_TYPES',
		});
	attributeInfoBoolean =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, boolean>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'boolean',
			id: 'ALL_TYPES_BOOLEAN',
			primitiveType: PApiPrimitiveTypes.boolean,
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'number',
			id: 'ALL_TYPES_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiAllTypes<ValidationMode>) {
				return [
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'integer',
			id: 'ALL_TYPES_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'currency',
			id: 'ALL_TYPES_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
		});
	attributeInfoString =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, string>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'string',
			id: 'ALL_TYPES_STRING',
			primitiveType: PApiPrimitiveTypes.string,
		});
	attributeInfoTel =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Tel>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'tel',
			id: 'ALL_TYPES_TEL',
			primitiveType: PApiPrimitiveTypes.Tel,
		});
	attributeInfoEmail =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Email>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'email',
			id: 'ALL_TYPES_EMAIL',
			primitiveType: PApiPrimitiveTypes.Email,
		});
	attributeInfoPassword =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Password>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'password',
			id: 'ALL_TYPES_PASSWORD',
			primitiveType: PApiPrimitiveTypes.Password,
		});
	attributeInfoPostalCode =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, PostalCode>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'postalCode',
			id: 'ALL_TYPES_POSTAL_CODE',
			primitiveType: PApiPrimitiveTypes.PostalCode,
		});
	attributeInfoSearch =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Search>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'search',
			id: 'ALL_TYPES_SEARCH',
			primitiveType: PApiPrimitiveTypes.Search,
		});
	attributeInfoUrl =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'url',
			id: 'ALL_TYPES_URL',
			primitiveType: PApiPrimitiveTypes.Url,
		});
	attributeInfoIban =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Iban>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'iban',
			id: 'ALL_TYPES_IBAN',
			primitiveType: PApiPrimitiveTypes.Iban,
		});
	attributeInfoBic =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Bic>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'bic',
			id: 'ALL_TYPES_BIC',
			primitiveType: PApiPrimitiveTypes.Bic,
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'dateTime',
			id: 'ALL_TYPES_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'date',
			id: 'ALL_TYPES_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'ALL_TYPES_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'minutes',
			id: 'ALL_TYPES_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'hours',
			id: 'ALL_TYPES_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'days',
			id: 'ALL_TYPES_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'months',
			id: 'ALL_TYPES_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'years',
			id: 'ALL_TYPES_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'duration',
			id: 'ALL_TYPES_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'localTime',
			id: 'ALL_TYPES_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
		});
	attributeInfoEnum =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, StoryBookApiCountry>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'enum',
			id: 'ALL_TYPES_ENUM',
			primitiveType: PApiPrimitiveTypes.Enum,
		});
	attributeInfoImage =  new ApiAttributeInfo<StoryBookApiAllTypes<ValidationMode>, Image>({
			apiObjWrapper: this as any as StoryBookApiAllTypes<ValidationMode>,
			name: 'image',
			id: 'ALL_TYPES_IMAGE',
			primitiveType: PApiPrimitiveTypes.Image,
		});

	/**
     * 
	 *
	 * @type {boolean}
     */
	get boolean() : NullableInDraftMode<boolean, ValidationMode> {
		return this.data[1];
	}

	set boolean(v : NullableInDraftMode<boolean, ValidationMode>) {
        this.setterImpl(1, v, 'boolean');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[2];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(2, v, 'number');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[3];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(3, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[4];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(4, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {string}
     */
	get string() : NullableInDraftMode<string, ValidationMode> {
		return this.data[5];
	}

	set string(v : NullableInDraftMode<string, ValidationMode>) {
        this.setterImpl(5, v, 'string');
	}

	/**
     * 
	 *
	 * @type {Tel}
     */
	get tel() : NullableInDraftMode<Tel, ValidationMode> {
		return this.data[6];
	}

	set tel(v : NullableInDraftMode<Tel, ValidationMode>) {
        this.setterImpl(6, v, 'tel');
	}

	/**
     * 
	 *
	 * @type {Email}
     */
	get email() : NullableInDraftMode<Email, ValidationMode> {
		return this.data[7];
	}

	set email(v : NullableInDraftMode<Email, ValidationMode>) {
        this.setterImpl(7, v, 'email');
	}

	/**
     * 
	 *
	 * @type {Password}
     */
	get password() : NullableInDraftMode<Password, ValidationMode> {
		return this.data[8];
	}

	set password(v : NullableInDraftMode<Password, ValidationMode>) {
        this.setterImpl(8, v, 'password');
	}

	/**
     * 
	 *
	 * @type {PostalCode}
     */
	get postalCode() : NullableInDraftMode<PostalCode, ValidationMode> {
		return this.data[9];
	}

	set postalCode(v : NullableInDraftMode<PostalCode, ValidationMode>) {
        this.setterImpl(9, v, 'postalCode');
	}

	/**
     * 
	 *
	 * @type {Search}
     */
	get search() : NullableInDraftMode<Search, ValidationMode> {
		return this.data[10];
	}

	set search(v : NullableInDraftMode<Search, ValidationMode>) {
        this.setterImpl(10, v, 'search');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get url() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[11];
	}

	set url(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(11, v, 'url');
	}

	/**
     * 
	 *
	 * @type {Iban}
     */
	get iban() : NullableInDraftMode<Iban, ValidationMode> {
		return this.data[12];
	}

	set iban(v : NullableInDraftMode<Iban, ValidationMode>) {
        this.setterImpl(12, v, 'iban');
	}

	/**
     * 
	 *
	 * @type {Bic}
     */
	get bic() : NullableInDraftMode<Bic, ValidationMode> {
		return this.data[13];
	}

	set bic(v : NullableInDraftMode<Bic, ValidationMode>) {
        this.setterImpl(13, v, 'bic');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[14];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(14, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[15];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(15, v, 'date');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[16];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(16, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[17];
	}

	set minutes(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(17, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[18];
	}

	set hours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(18, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[19];
	}

	set days(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(19, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[20];
	}

	set months(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(20, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[21];
	}

	set years(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(21, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[22];
	}

	set duration(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(22, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[23];
	}

	set localTime(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(23, v, 'localTime');
	}

	/**
     * 
	 *
	 * @type {StoryBookApiCountry}
     */
	get enum() : NullableInDraftMode<StoryBookApiCountry, ValidationMode> {
		return this.data[24];
	}

	set enum(v : NullableInDraftMode<StoryBookApiCountry, ValidationMode>) {
        this.setterImpl(24, v, 'enum');
	}

	/**
     * 
	 *
	 * @type {Image}
     */
	get image() : NullableInDraftMode<Image, ValidationMode> {
		const path = this.data[25] as string;
		return path ? Config.API_IMAGE_BASE_URL + path : path;
	}

	set image(v : NullableInDraftMode<Image, ValidationMode>) {
        this.setterImpl(25, v, 'image');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 26);

			data[1] = true;
			data[2] = 4;
			data[3] = 5;
			data[4] = 5;
			data[5] = 'Text';
			data[6] = '06123456';
			data[7] = 'adam@dr-plano.de';
			data[8] = '!Secret123';
			data[9] = '43255';
			data[10] = 'Text';
			data[11] = 'www.dr-plano.de';
			data[12] = 'DE89 3704 0044 0532 0130 00';
			data[13] = 'NOLADE21STS';
			data[14] = 1604506563086;
			data[15] = 1604444400000;
			data[16] = 1604444400000;
			data[17] = 5;
			data[18] = 5;
			data[19] = 7;
			data[20] = 7;
			data[21] = 2;
			data[22] = 99999;
			data[23] = 3600000;
			data[24] = StoryBookApiCountry.GERMANY;
			data[25] = '';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '2';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '2', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiAllTypes<'validated'> {
		// TODO: PLANO-151346
	}
}

export enum StoryBookApiCountry {
	GERMANY = 1,
	AUSTRIA = 2,
	SWITZERLAND = 3,
	NETHERLANDS = 4,
	BELGIUM = 5,
	UNITED_KINGDOM = 6,
	CZECH_REPUBLIC = 7,
	SWEDEN = 8,
	LUXEMBOURG = 9,
}
		 
export class StoryBookApiIsNull<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiIsNull as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, StoryBookApiIsNull<ValidationMode>> = new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, StoryBookApiIsNull<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'isNull',
			id: 'IS_NULL',
		});
	attributeInfoBoolean =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, boolean>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'boolean',
			id: 'IS_NULL_BOOLEAN',
			primitiveType: PApiPrimitiveTypes.boolean,
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'number',
			id: 'IS_NULL_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiIsNull<ValidationMode>) {
				return [
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'integer',
			id: 'IS_NULL_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'currency',
			id: 'IS_NULL_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
		});
	attributeInfoString =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, string>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'string',
			id: 'IS_NULL_STRING',
			primitiveType: PApiPrimitiveTypes.string,
		});
	attributeInfoTel =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Tel>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'tel',
			id: 'IS_NULL_TEL',
			primitiveType: PApiPrimitiveTypes.Tel,
		});
	attributeInfoEmail =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Email>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'email',
			id: 'IS_NULL_EMAIL',
			primitiveType: PApiPrimitiveTypes.Email,
		});
	attributeInfoPassword =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Password>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'password',
			id: 'IS_NULL_PASSWORD',
			primitiveType: PApiPrimitiveTypes.Password,
		});
	attributeInfoPostalCode =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, PostalCode>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'postalCode',
			id: 'IS_NULL_POSTAL_CODE',
			primitiveType: PApiPrimitiveTypes.PostalCode,
		});
	attributeInfoSearch =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Search>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'search',
			id: 'IS_NULL_SEARCH',
			primitiveType: PApiPrimitiveTypes.Search,
		});
	attributeInfoUrl =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'url',
			id: 'IS_NULL_URL',
			primitiveType: PApiPrimitiveTypes.Url,
		});
	attributeInfoIban =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Iban>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'iban',
			id: 'IS_NULL_IBAN',
			primitiveType: PApiPrimitiveTypes.Iban,
		});
	attributeInfoBic =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Bic>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'bic',
			id: 'IS_NULL_BIC',
			primitiveType: PApiPrimitiveTypes.Bic,
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'dateTime',
			id: 'IS_NULL_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'date',
			id: 'IS_NULL_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'IS_NULL_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'minutes',
			id: 'IS_NULL_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'hours',
			id: 'IS_NULL_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'days',
			id: 'IS_NULL_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'months',
			id: 'IS_NULL_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'years',
			id: 'IS_NULL_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'duration',
			id: 'IS_NULL_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'localTime',
			id: 'IS_NULL_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
		});
	attributeInfoEnum =  new ApiAttributeInfo<StoryBookApiIsNull<ValidationMode>, StoryBookApiCountry>({
			apiObjWrapper: this as any as StoryBookApiIsNull<ValidationMode>,
			name: 'enum',
			id: 'IS_NULL_ENUM',
			primitiveType: PApiPrimitiveTypes.Enum,
		});

	/**
     * 
	 *
	 * @type {boolean}
     */
	get boolean() : boolean | null {
		return this.data[1];
	}

	set boolean(v : boolean | null) {
        this.setterImpl(1, v, 'boolean');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : number | null {
		return this.data[2];
	}

	set number(v : number | null) {
        this.setterImpl(2, v, 'number');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : Integer | null {
		return this.data[3];
	}

	set integer(v : Integer | null) {
        this.setterImpl(3, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : Currency | null {
		return this.data[4];
	}

	set currency(v : Currency | null) {
        this.setterImpl(4, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {string}
     */
	get string() : string | null {
		return this.data[5];
	}

	set string(v : string | null) {
        this.setterImpl(5, v, 'string');
	}

	/**
     * 
	 *
	 * @type {Tel}
     */
	get tel() : Tel | null {
		return this.data[6];
	}

	set tel(v : Tel | null) {
        this.setterImpl(6, v, 'tel');
	}

	/**
     * 
	 *
	 * @type {Email}
     */
	get email() : Email | null {
		return this.data[7];
	}

	set email(v : Email | null) {
        this.setterImpl(7, v, 'email');
	}

	/**
     * 
	 *
	 * @type {Password}
     */
	get password() : Password | null {
		return this.data[8];
	}

	set password(v : Password | null) {
        this.setterImpl(8, v, 'password');
	}

	/**
     * 
	 *
	 * @type {PostalCode}
     */
	get postalCode() : PostalCode | null {
		return this.data[9];
	}

	set postalCode(v : PostalCode | null) {
        this.setterImpl(9, v, 'postalCode');
	}

	/**
     * 
	 *
	 * @type {Search}
     */
	get search() : Search | null {
		return this.data[10];
	}

	set search(v : Search | null) {
        this.setterImpl(10, v, 'search');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get url() : Url | null {
		return this.data[11];
	}

	set url(v : Url | null) {
        this.setterImpl(11, v, 'url');
	}

	/**
     * 
	 *
	 * @type {Iban}
     */
	get iban() : Iban | null {
		return this.data[12];
	}

	set iban(v : Iban | null) {
        this.setterImpl(12, v, 'iban');
	}

	/**
     * 
	 *
	 * @type {Bic}
     */
	get bic() : Bic | null {
		return this.data[13];
	}

	set bic(v : Bic | null) {
        this.setterImpl(13, v, 'bic');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : DateTime | null {
		return this.data[14];
	}

	set dateTime(v : DateTime | null) {
        this.setterImpl(14, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : Date | null {
		return this.data[15];
	}

	set date(v : Date | null) {
        this.setterImpl(15, v, 'date');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : DateExclusiveEnd | null {
		return this.data[16];
	}

	set dateExclusiveEnd(v : DateExclusiveEnd | null) {
        this.setterImpl(16, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : Minutes | null {
		return this.data[17];
	}

	set minutes(v : Minutes | null) {
        this.setterImpl(17, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : Hours | null {
		return this.data[18];
	}

	set hours(v : Hours | null) {
        this.setterImpl(18, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : Days | null {
		return this.data[19];
	}

	set days(v : Days | null) {
        this.setterImpl(19, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : Months | null {
		return this.data[20];
	}

	set months(v : Months | null) {
        this.setterImpl(20, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : Years | null {
		return this.data[21];
	}

	set years(v : Years | null) {
        this.setterImpl(21, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : Duration | null {
		return this.data[22];
	}

	set duration(v : Duration | null) {
        this.setterImpl(22, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : LocalTime | null {
		return this.data[23];
	}

	set localTime(v : LocalTime | null) {
        this.setterImpl(23, v, 'localTime');
	}

	/**
     * 
	 *
	 * @type {StoryBookApiCountry}
     */
	get enum() : StoryBookApiCountry | null {
		return this.data[24];
	}

	set enum(v : StoryBookApiCountry | null) {
        this.setterImpl(24, v, 'enum');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 25);

		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '3';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '3', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiIsNull<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidations<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidations as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.telWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.emailWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.passwordWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.postalCodeWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.urlWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.ibanWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.bicWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.currencyWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.integerWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.requiredWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.minWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
		this.maxWrapper.parent = this as any as StoryBookApiValidations<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidations<ValidationMode>, StoryBookApiValidations<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidations<ValidationMode>, StoryBookApiValidations<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidations<ValidationMode>,
			name: 'validations',
			id: 'VALIDATIONS',
		});

	private telWrapper : StoryBookApiValidationsTel<ValidationMode> = new StoryBookApiValidationsTel<ValidationMode>(this.api);

	/**
     * 
     */
	get tel() : StoryBookApiValidationsTel<ValidationMode> {
		return this.telWrapper;
	}

	set telTestSetter(v : StoryBookApiValidationsTel<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'tel', () => {this.telWrapper = v;});
	}

	private emailWrapper : StoryBookApiValidationsEmail<ValidationMode> = new StoryBookApiValidationsEmail<ValidationMode>(this.api);

	/**
     * 
     */
	get email() : StoryBookApiValidationsEmail<ValidationMode> {
		return this.emailWrapper;
	}

	set emailTestSetter(v : StoryBookApiValidationsEmail<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'email', () => {this.emailWrapper = v;});
	}

	private passwordWrapper : StoryBookApiValidationsPassword<ValidationMode> = new StoryBookApiValidationsPassword<ValidationMode>(this.api);

	/**
     * 
     */
	get password() : StoryBookApiValidationsPassword<ValidationMode> {
		return this.passwordWrapper;
	}

	set passwordTestSetter(v : StoryBookApiValidationsPassword<ValidationMode>) {
        this.setterImpl(3, v.rawData, 'password', () => {this.passwordWrapper = v;});
	}

	private postalCodeWrapper : StoryBookApiValidationsPostalCode<ValidationMode> = new StoryBookApiValidationsPostalCode<ValidationMode>(this.api);

	/**
     * 
     */
	get postalCode() : StoryBookApiValidationsPostalCode<ValidationMode> {
		return this.postalCodeWrapper;
	}

	set postalCodeTestSetter(v : StoryBookApiValidationsPostalCode<ValidationMode>) {
        this.setterImpl(4, v.rawData, 'postalCode', () => {this.postalCodeWrapper = v;});
	}

	private urlWrapper : StoryBookApiValidationsUrl<ValidationMode> = new StoryBookApiValidationsUrl<ValidationMode>(this.api);

	/**
     * 
     */
	get url() : StoryBookApiValidationsUrl<ValidationMode> {
		return this.urlWrapper;
	}

	set urlTestSetter(v : StoryBookApiValidationsUrl<ValidationMode>) {
        this.setterImpl(5, v.rawData, 'url', () => {this.urlWrapper = v;});
	}

	private ibanWrapper : StoryBookApiValidationsIban<ValidationMode> = new StoryBookApiValidationsIban<ValidationMode>(this.api);

	/**
     * 
     */
	get iban() : StoryBookApiValidationsIban<ValidationMode> {
		return this.ibanWrapper;
	}

	set ibanTestSetter(v : StoryBookApiValidationsIban<ValidationMode>) {
        this.setterImpl(6, v.rawData, 'iban', () => {this.ibanWrapper = v;});
	}

	private bicWrapper : StoryBookApiValidationsBic<ValidationMode> = new StoryBookApiValidationsBic<ValidationMode>(this.api);

	/**
     * 
     */
	get bic() : StoryBookApiValidationsBic<ValidationMode> {
		return this.bicWrapper;
	}

	set bicTestSetter(v : StoryBookApiValidationsBic<ValidationMode>) {
        this.setterImpl(7, v.rawData, 'bic', () => {this.bicWrapper = v;});
	}

	private currencyWrapper : StoryBookApiValidationsCurrency<ValidationMode> = new StoryBookApiValidationsCurrency<ValidationMode>(this.api);

	/**
     * 
     */
	get currency() : StoryBookApiValidationsCurrency<ValidationMode> {
		return this.currencyWrapper;
	}

	set currencyTestSetter(v : StoryBookApiValidationsCurrency<ValidationMode>) {
        this.setterImpl(8, v.rawData, 'currency', () => {this.currencyWrapper = v;});
	}

	private integerWrapper : StoryBookApiValidationsInteger<ValidationMode> = new StoryBookApiValidationsInteger<ValidationMode>(this.api);

	/**
     * 
     */
	get integer() : StoryBookApiValidationsInteger<ValidationMode> {
		return this.integerWrapper;
	}

	set integerTestSetter(v : StoryBookApiValidationsInteger<ValidationMode>) {
        this.setterImpl(9, v.rawData, 'integer', () => {this.integerWrapper = v;});
	}

	private requiredWrapper : StoryBookApiValidationsRequired<ValidationMode> = new StoryBookApiValidationsRequired<ValidationMode>(this.api);

	/**
     * 
     */
	get required() : StoryBookApiValidationsRequired<ValidationMode> {
		return this.requiredWrapper;
	}

	set requiredTestSetter(v : StoryBookApiValidationsRequired<ValidationMode>) {
        this.setterImpl(10, v.rawData, 'required', () => {this.requiredWrapper = v;});
	}

	private minWrapper : StoryBookApiValidationsMin<ValidationMode> = new StoryBookApiValidationsMin<ValidationMode>(this.api);

	/**
     * 
     */
	get min() : StoryBookApiValidationsMin<ValidationMode> {
		return this.minWrapper;
	}

	set minTestSetter(v : StoryBookApiValidationsMin<ValidationMode>) {
        this.setterImpl(11, v.rawData, 'min', () => {this.minWrapper = v;});
	}

	private maxWrapper : StoryBookApiValidationsMax<ValidationMode> = new StoryBookApiValidationsMax<ValidationMode>(this.api);

	/**
     * 
     */
	get max() : StoryBookApiValidationsMax<ValidationMode> {
		return this.maxWrapper;
	}

	set maxTestSetter(v : StoryBookApiValidationsMax<ValidationMode>) {
        this.setterImpl(12, v.rawData, 'max', () => {this.maxWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.telWrapper._fixIds(_idReplacements);
		this.emailWrapper._fixIds(_idReplacements);
		this.passwordWrapper._fixIds(_idReplacements);
		this.postalCodeWrapper._fixIds(_idReplacements);
		this.urlWrapper._fixIds(_idReplacements);
		this.ibanWrapper._fixIds(_idReplacements);
		this.bicWrapper._fixIds(_idReplacements);
		this.currencyWrapper._fixIds(_idReplacements);
		this.integerWrapper._fixIds(_idReplacements);
		this.requiredWrapper._fixIds(_idReplacements);
		this.minWrapper._fixIds(_idReplacements);
		this.maxWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 13);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
			if(data[3] === null)
				data[3] = Meta.createNewObject(false);
			if(data[4] === null)
				data[4] = Meta.createNewObject(false);
			if(data[5] === null)
				data[5] = Meta.createNewObject(false);
			if(data[6] === null)
				data[6] = Meta.createNewObject(false);
			if(data[7] === null)
				data[7] = Meta.createNewObject(false);
			if(data[8] === null)
				data[8] = Meta.createNewObject(false);
			if(data[9] === null)
				data[9] = Meta.createNewObject(false);
			if(data[10] === null)
				data[10] = Meta.createNewObject(false);
			if(data[11] === null)
				data[11] = Meta.createNewObject(false);
			if(data[12] === null)
				data[12] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.telWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.emailWrapper._updateRawData(data ? data[2] : null, generateMissingData);
		this.passwordWrapper._updateRawData(data ? data[3] : null, generateMissingData);
		this.postalCodeWrapper._updateRawData(data ? data[4] : null, generateMissingData);
		this.urlWrapper._updateRawData(data ? data[5] : null, generateMissingData);
		this.ibanWrapper._updateRawData(data ? data[6] : null, generateMissingData);
		this.bicWrapper._updateRawData(data ? data[7] : null, generateMissingData);
		this.currencyWrapper._updateRawData(data ? data[8] : null, generateMissingData);
		this.integerWrapper._updateRawData(data ? data[9] : null, generateMissingData);
		this.requiredWrapper._updateRawData(data ? data[10] : null, generateMissingData);
		this.minWrapper._updateRawData(data ? data[11] : null, generateMissingData);
		this.maxWrapper._updateRawData(data ? data[12] : null, generateMissingData);
	}

	protected get dni() : string {
		return '4';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '4', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidations<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsTel<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsTel as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsTel<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsTel<ValidationMode>, StoryBookApiValidationsTel<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsTel<ValidationMode>, StoryBookApiValidationsTel<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsTel<ValidationMode>,
			name: 'tel',
			id: 'VALIDATIONS_TEL',
		});

	private failsWrapper : StoryBookApiValidationsTelFails<ValidationMode> = new StoryBookApiValidationsTelFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsTelFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsTelFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '54';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '54', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsTel<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsTelFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsTelFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsTelFails<ValidationMode>, StoryBookApiValidationsTelFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsTelFails<ValidationMode>, StoryBookApiValidationsTelFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsTelFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_TEL_FAILS',
		});
	attributeInfoBadValue =  new ApiAttributeInfo<StoryBookApiValidationsTelFails<ValidationMode>, Tel>({
			apiObjWrapper: this as any as StoryBookApiValidationsTelFails<ValidationMode>,
			name: 'badValue',
			id: 'VALIDATIONS_TEL_FAILS_BAD_VALUE',
			primitiveType: PApiPrimitiveTypes.Tel,
			vars: {
				expectedValidationError: 'Unzulässiges Zeichen eingegeben. Richtiges Beispiel: »+49 123 0000000«.',
			}
		});

	/**
     * 
	 *
	 * @type {Tel}
     */
	get badValue() : NullableInDraftMode<Tel, ValidationMode> {
		return this.data[1];
	}

	set badValue(v : NullableInDraftMode<Tel, ValidationMode>) {
        this.setterImpl(1, v, 'badValue');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			data[1] = 'asd';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '66';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '66', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsTelFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsEmail<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsEmail as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsEmail<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsEmail<ValidationMode>, StoryBookApiValidationsEmail<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsEmail<ValidationMode>, StoryBookApiValidationsEmail<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsEmail<ValidationMode>,
			name: 'email',
			id: 'VALIDATIONS_EMAIL',
		});

	private failsWrapper : StoryBookApiValidationsEmailFails<ValidationMode> = new StoryBookApiValidationsEmailFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsEmailFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsEmailFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '55';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '55', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsEmail<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsEmailFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsEmailFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsEmailFails<ValidationMode>, StoryBookApiValidationsEmailFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsEmailFails<ValidationMode>, StoryBookApiValidationsEmailFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsEmailFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_EMAIL_FAILS',
		});
	attributeInfoNoAt =  new ApiAttributeInfo<StoryBookApiValidationsEmailFails<ValidationMode>, Email>({
			apiObjWrapper: this as any as StoryBookApiValidationsEmailFails<ValidationMode>,
			name: 'noAt',
			id: 'VALIDATIONS_EMAIL_FAILS_NO_AT',
			primitiveType: PApiPrimitiveTypes.Email,
			vars: {
				expectedValidationError: 'Es fehlt das »@« Zeichen.',
			}
		});
	attributeInfoBadValue =  new ApiAttributeInfo<StoryBookApiValidationsEmailFails<ValidationMode>, Email>({
			apiObjWrapper: this as any as StoryBookApiValidationsEmailFails<ValidationMode>,
			name: 'badValue',
			id: 'VALIDATIONS_EMAIL_FAILS_BAD_VALUE',
			primitiveType: PApiPrimitiveTypes.Email,
			vars: {
				expectedValidationError: 'Falsches Format eingegeben.',
			}
		});

	/**
     * 
	 *
	 * @type {Email}
     */
	get noAt() : NullableInDraftMode<Email, ValidationMode> {
		return this.data[1];
	}

	set noAt(v : NullableInDraftMode<Email, ValidationMode>) {
        this.setterImpl(1, v, 'noAt');
	}

	/**
     * 
	 *
	 * @type {Email}
     */
	get badValue() : NullableInDraftMode<Email, ValidationMode> {
		return this.data[2];
	}

	set badValue(v : NullableInDraftMode<Email, ValidationMode>) {
        this.setterImpl(2, v, 'badValue');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			data[1] = 'at-is-missing';
			data[2] = 'foo@bar#';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '68';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '68', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsEmailFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsPassword<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsPassword as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsPassword<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsPassword<ValidationMode>, StoryBookApiValidationsPassword<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsPassword<ValidationMode>, StoryBookApiValidationsPassword<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsPassword<ValidationMode>,
			name: 'password',
			id: 'VALIDATIONS_PASSWORD',
		});

	private failsWrapper : StoryBookApiValidationsPasswordFails<ValidationMode> = new StoryBookApiValidationsPasswordFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsPasswordFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsPasswordFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '56';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '56', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsPassword<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsPasswordFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsPasswordFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsPasswordFails<ValidationMode>, StoryBookApiValidationsPasswordFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsPasswordFails<ValidationMode>, StoryBookApiValidationsPasswordFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsPasswordFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_PASSWORD_FAILS',
		});
	attributeInfoTooShort =  new ApiAttributeInfo<StoryBookApiValidationsPasswordFails<ValidationMode>, Password>({
			apiObjWrapper: this as any as StoryBookApiValidationsPasswordFails<ValidationMode>,
			name: 'tooShort',
			id: 'VALIDATIONS_PASSWORD_FAILS_TOO_SHORT',
			primitiveType: PApiPrimitiveTypes.Password,
			vars: {
				expectedValidationError: 'Bitte mindestens 7 Zeichen eingeben. 4 ist zu wenig.',
			}
		});
	attributeInfoNeedsDigits =  new ApiAttributeInfo<StoryBookApiValidationsPasswordFails<ValidationMode>, Password>({
			apiObjWrapper: this as any as StoryBookApiValidationsPasswordFails<ValidationMode>,
			name: 'needsDigits',
			id: 'VALIDATIONS_PASSWORD_FAILS_NEEDS_DIGITS',
			primitiveType: PApiPrimitiveTypes.Password,
			vars: {
				expectedValidationError: 'Das Passwort muss Zahlen enthalten.',
			}
		});

	/**
     * 
	 *
	 * @type {Password}
     */
	get tooShort() : NullableInDraftMode<Password, ValidationMode> {
		return this.data[1];
	}

	set tooShort(v : NullableInDraftMode<Password, ValidationMode>) {
        this.setterImpl(1, v, 'tooShort');
	}

	/**
     * 
	 *
	 * @type {Password}
     */
	get needsDigits() : NullableInDraftMode<Password, ValidationMode> {
		return this.data[2];
	}

	set needsDigits(v : NullableInDraftMode<Password, ValidationMode>) {
        this.setterImpl(2, v, 'needsDigits');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			data[1] = 'asd6';
			data[2] = 'asdefgh';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '71';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '71', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsPasswordFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsPostalCode<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsPostalCode as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsPostalCode<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsPostalCode<ValidationMode>, StoryBookApiValidationsPostalCode<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsPostalCode<ValidationMode>, StoryBookApiValidationsPostalCode<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsPostalCode<ValidationMode>,
			name: 'postalCode',
			id: 'VALIDATIONS_POSTAL_CODE',
		});

	private failsWrapper : StoryBookApiValidationsPostalCodeFails<ValidationMode> = new StoryBookApiValidationsPostalCodeFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsPostalCodeFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsPostalCodeFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '57';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '57', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsPostalCode<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsPostalCodeFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsPostalCodeFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsPostalCodeFails<ValidationMode>, StoryBookApiValidationsPostalCodeFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsPostalCodeFails<ValidationMode>, StoryBookApiValidationsPostalCodeFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsPostalCodeFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_POSTAL_CODE_FAILS',
		});
	attributeInfoTooLong =  new ApiAttributeInfo<StoryBookApiValidationsPostalCodeFails<ValidationMode>, PostalCode>({
			apiObjWrapper: this as any as StoryBookApiValidationsPostalCodeFails<ValidationMode>,
			name: 'tooLong',
			id: 'VALIDATIONS_POSTAL_CODE_FAILS_TOO_LONG',
			primitiveType: PApiPrimitiveTypes.PostalCode,
			vars: {
				expectedValidationError: 'Bitte maximal 8 Zeichen eingeben. 10 ist zu viel.',
			}
		});
	attributeInfoTooShort =  new ApiAttributeInfo<StoryBookApiValidationsPostalCodeFails<ValidationMode>, PostalCode>({
			apiObjWrapper: this as any as StoryBookApiValidationsPostalCodeFails<ValidationMode>,
			name: 'tooShort',
			id: 'VALIDATIONS_POSTAL_CODE_FAILS_TOO_SHORT',
			primitiveType: PApiPrimitiveTypes.PostalCode,
			vars: {
				expectedValidationError: 'Bitte mindestens 4 Zeichen eingeben. 2 ist zu wenig.',
			}
		});

	/**
     * 
	 *
	 * @type {PostalCode}
     */
	get tooLong() : NullableInDraftMode<PostalCode, ValidationMode> {
		return this.data[1];
	}

	set tooLong(v : NullableInDraftMode<PostalCode, ValidationMode>) {
        this.setterImpl(1, v, 'tooLong');
	}

	/**
     * 
	 *
	 * @type {PostalCode}
     */
	get tooShort() : NullableInDraftMode<PostalCode, ValidationMode> {
		return this.data[2];
	}

	set tooShort(v : NullableInDraftMode<PostalCode, ValidationMode>) {
        this.setterImpl(2, v, 'tooShort');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			data[1] = '5555555555';
			data[2] = '33';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '74';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '74', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsPostalCodeFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsUrl<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsUrl as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsUrl<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsUrl<ValidationMode>, StoryBookApiValidationsUrl<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsUrl<ValidationMode>, StoryBookApiValidationsUrl<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsUrl<ValidationMode>,
			name: 'url',
			id: 'VALIDATIONS_URL',
		});

	private failsWrapper : StoryBookApiValidationsUrlFails<ValidationMode> = new StoryBookApiValidationsUrlFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsUrlFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsUrlFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '58';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '58', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsUrl<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsUrlFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsUrlFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsUrlFails<ValidationMode>, StoryBookApiValidationsUrlFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsUrlFails<ValidationMode>, StoryBookApiValidationsUrlFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsUrlFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_URL_FAILS',
		});
	attributeInfoProtocolMissing =  new ApiAttributeInfo<StoryBookApiValidationsUrlFails<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiValidationsUrlFails<ValidationMode>,
			name: 'protocolMissing',
			id: 'VALIDATIONS_URL_FAILS_PROTOCOL_MISSING',
			primitiveType: PApiPrimitiveTypes.Url,
			vars: {
				expectedValidationError: 'Bitte mit »http://« oder »https://« beginnen.',
			}
		});
	attributeInfoWww =  new ApiAttributeInfo<StoryBookApiValidationsUrlFails<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiValidationsUrlFails<ValidationMode>,
			name: 'www',
			id: 'VALIDATIONS_URL_FAILS_WWW',
			primitiveType: PApiPrimitiveTypes.Url,
			vars: {
				expectedValidationError: 'Falsches Format eingegeben.',
			}
		});
	attributeInfoBadValue =  new ApiAttributeInfo<StoryBookApiValidationsUrlFails<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiValidationsUrlFails<ValidationMode>,
			name: 'badValue',
			id: 'VALIDATIONS_URL_FAILS_BAD_VALUE',
			primitiveType: PApiPrimitiveTypes.Url,
			vars: {
				expectedValidationError: 'Falsches Format eingegeben.',
			}
		});
	attributeInfoWhitespace =  new ApiAttributeInfo<StoryBookApiValidationsUrlFails<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiValidationsUrlFails<ValidationMode>,
			name: 'whitespace',
			id: 'VALIDATIONS_URL_FAILS_WHITESPACE',
			primitiveType: PApiPrimitiveTypes.Url,
			vars: {
				expectedValidationError: 'Bitte keine Leerzeichen eingeben.',
			}
		});

	/**
     * 
	 *
	 * @type {Url}
     */
	get protocolMissing() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[1];
	}

	set protocolMissing(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(1, v, 'protocolMissing');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get www() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[2];
	}

	set www(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(2, v, 'www');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get badValue() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[3];
	}

	set badValue(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(3, v, 'badValue');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get whitespace() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[4];
	}

	set whitespace(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(4, v, 'whitespace');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 5);

			data[1] = 'asd';
			data[2] = 'www.dr-plano.com';
			data[3] = 'https://abc';
			data[4] = 'https://dr-plano.com/foo bar/lorem';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '77';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '77', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsUrlFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsIban<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsIban as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsIban<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsIban<ValidationMode>, StoryBookApiValidationsIban<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsIban<ValidationMode>, StoryBookApiValidationsIban<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsIban<ValidationMode>,
			name: 'iban',
			id: 'VALIDATIONS_IBAN',
		});

	private failsWrapper : StoryBookApiValidationsIbanFails<ValidationMode> = new StoryBookApiValidationsIbanFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsIbanFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsIbanFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '59';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '59', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsIban<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsIbanFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsIbanFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsIbanFails<ValidationMode>, StoryBookApiValidationsIbanFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsIbanFails<ValidationMode>, StoryBookApiValidationsIbanFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsIbanFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_IBAN_FAILS',
		});
	attributeInfoBadValue =  new ApiAttributeInfo<StoryBookApiValidationsIbanFails<ValidationMode>, Iban>({
			apiObjWrapper: this as any as StoryBookApiValidationsIbanFails<ValidationMode>,
			name: 'badValue',
			id: 'VALIDATIONS_IBAN_FAILS_BAD_VALUE',
			primitiveType: PApiPrimitiveTypes.Iban,
			vars: {
				expectedValidationError: 'Falsches Format eingegeben.',
			}
		});

	/**
     * 
	 *
	 * @type {Iban}
     */
	get badValue() : NullableInDraftMode<Iban, ValidationMode> {
		return this.data[1];
	}

	set badValue(v : NullableInDraftMode<Iban, ValidationMode>) {
        this.setterImpl(1, v, 'badValue');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			data[1] = 'asd';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '82';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '82', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsIbanFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsBic<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsBic as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsBic<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsBic<ValidationMode>, StoryBookApiValidationsBic<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsBic<ValidationMode>, StoryBookApiValidationsBic<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsBic<ValidationMode>,
			name: 'bic',
			id: 'VALIDATIONS_BIC',
		});

	private failsWrapper : StoryBookApiValidationsBicFails<ValidationMode> = new StoryBookApiValidationsBicFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsBicFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsBicFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '60';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '60', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsBic<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsBicFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsBicFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsBicFails<ValidationMode>, StoryBookApiValidationsBicFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsBicFails<ValidationMode>, StoryBookApiValidationsBicFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsBicFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_BIC_FAILS',
		});
	attributeInfoBadValue =  new ApiAttributeInfo<StoryBookApiValidationsBicFails<ValidationMode>, Bic>({
			apiObjWrapper: this as any as StoryBookApiValidationsBicFails<ValidationMode>,
			name: 'badValue',
			id: 'VALIDATIONS_BIC_FAILS_BAD_VALUE',
			primitiveType: PApiPrimitiveTypes.Bic,
			vars: {
				expectedValidationError: 'Falsches Format eingegeben.',
			}
		});

	/**
     * 
	 *
	 * @type {Bic}
     */
	get badValue() : NullableInDraftMode<Bic, ValidationMode> {
		return this.data[1];
	}

	set badValue(v : NullableInDraftMode<Bic, ValidationMode>) {
        this.setterImpl(1, v, 'badValue');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			data[1] = 'asd';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '84';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '84', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsBicFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsCurrency<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsCurrency as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsCurrency<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsCurrency<ValidationMode>, StoryBookApiValidationsCurrency<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsCurrency<ValidationMode>, StoryBookApiValidationsCurrency<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsCurrency<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_CURRENCY',
		});

	private failsWrapper : StoryBookApiValidationsCurrencyFails<ValidationMode> = new StoryBookApiValidationsCurrencyFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsCurrencyFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsCurrencyFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '61';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '61', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsCurrency<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsCurrencyFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsCurrencyFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsCurrencyFails<ValidationMode>, StoryBookApiValidationsCurrencyFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsCurrencyFails<ValidationMode>, StoryBookApiValidationsCurrencyFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsCurrencyFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_CURRENCY_FAILS',
		});
	attributeInfoTooManyDigits =  new ApiAttributeInfo<StoryBookApiValidationsCurrencyFails<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsCurrencyFails<ValidationMode>,
			name: 'tooManyDigits',
			id: 'VALIDATIONS_CURRENCY_FAILS_TOO_MANY_DIGITS',
			primitiveType: PApiPrimitiveTypes.Currency,
			vars: {
				expectedValidationError: 'Bitte höchstens 2 Nachkommastellen eintragen.',
			}
		});

	/**
     * 
	 *
	 * @type {Currency}
     */
	get tooManyDigits() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[1];
	}

	set tooManyDigits(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(1, v, 'tooManyDigits');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			data[1] = 5.234;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '86';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '86', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsCurrencyFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsInteger<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsInteger as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.failsWrapper.parent = this as any as StoryBookApiValidationsInteger<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsInteger<ValidationMode>, StoryBookApiValidationsInteger<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsInteger<ValidationMode>, StoryBookApiValidationsInteger<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsInteger<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_INTEGER',
		});

	private failsWrapper : StoryBookApiValidationsIntegerFails<ValidationMode> = new StoryBookApiValidationsIntegerFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsIntegerFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsIntegerFails<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.failsWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '62';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '62', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsInteger<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsIntegerFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsIntegerFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsIntegerFails<ValidationMode>, StoryBookApiValidationsIntegerFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsIntegerFails<ValidationMode>, StoryBookApiValidationsIntegerFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsIntegerFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_INTEGER_FAILS',
		});
	attributeInfoBadValueHours =  new ApiAttributeInfo<StoryBookApiValidationsIntegerFails<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsIntegerFails<ValidationMode>,
			name: 'badValueHours',
			id: 'VALIDATIONS_INTEGER_FAILS_BAD_VALUE_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			vars: {
				expectedValidationError: 'Bitte nur ganze Zahlen eingeben, z.B. »10«.',
			}
		});
	attributeInfoBadValueInteger =  new ApiAttributeInfo<StoryBookApiValidationsIntegerFails<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsIntegerFails<ValidationMode>,
			name: 'badValueInteger',
			id: 'VALIDATIONS_INTEGER_FAILS_BAD_VALUE_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			vars: {
				expectedValidationError: 'Bitte nur ganze Zahlen eingeben, z.B. »10«.',
			}
		});

	/**
     * 
	 *
	 * @type {Hours}
     */
	get badValueHours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[1];
	}

	set badValueHours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(1, v, 'badValueHours');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get badValueInteger() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[2];
	}

	set badValueInteger(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(2, v, 'badValueInteger');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			data[1] = 5.2;
			data[2] = 5.5;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '88';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '88', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsIntegerFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsRequired<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsRequired as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.validWrapper.parent = this as any as StoryBookApiValidationsRequired<ValidationMode>;
		this.failsWrapper.parent = this as any as StoryBookApiValidationsRequired<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsRequired<ValidationMode>, StoryBookApiValidationsRequired<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsRequired<ValidationMode>, StoryBookApiValidationsRequired<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequired<ValidationMode>,
			name: 'required',
			id: 'VALIDATIONS_REQUIRED',
		});

	private validWrapper : StoryBookApiValidationsRequiredValid<ValidationMode> = new StoryBookApiValidationsRequiredValid<ValidationMode>(this.api);

	/**
     * 
     */
	get valid() : StoryBookApiValidationsRequiredValid<ValidationMode> {
		return this.validWrapper;
	}

	set validTestSetter(v : StoryBookApiValidationsRequiredValid<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'valid', () => {this.validWrapper = v;});
	}

	private failsWrapper : StoryBookApiValidationsRequiredFails<ValidationMode> = new StoryBookApiValidationsRequiredFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsRequiredFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsRequiredFails<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.validWrapper._fixIds(_idReplacements);
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.validWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.failsWrapper._updateRawData(data ? data[2] : null, generateMissingData);
	}

	protected get dni() : string {
		return '63';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '63', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsRequired<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsRequiredValid<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsRequiredValid as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, StoryBookApiValidationsRequiredValid<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, StoryBookApiValidationsRequiredValid<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'valid',
			id: 'VALIDATIONS_REQUIRED_VALID',
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'number',
			id: 'VALIDATIONS_REQUIRED_VALID_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.number, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(1, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_REQUIRED_VALID_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Integer, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_REQUIRED_VALID_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Currency, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoString =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, string>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'string',
			id: 'VALIDATIONS_REQUIRED_VALID_STRING',
			primitiveType: PApiPrimitiveTypes.string,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.string, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoTel =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Tel>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'tel',
			id: 'VALIDATIONS_REQUIRED_VALID_TEL',
			primitiveType: PApiPrimitiveTypes.Tel,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Tel, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoEmail =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Email>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'email',
			id: 'VALIDATIONS_REQUIRED_VALID_EMAIL',
			primitiveType: PApiPrimitiveTypes.Email,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Email, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoPassword =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Password>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'password',
			id: 'VALIDATIONS_REQUIRED_VALID_PASSWORD',
			primitiveType: PApiPrimitiveTypes.Password,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Password, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoPostalCode =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, PostalCode>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'postalCode',
			id: 'VALIDATIONS_REQUIRED_VALID_POSTAL_CODE',
			primitiveType: PApiPrimitiveTypes.PostalCode,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.PostalCode, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoSearch =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Search>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'search',
			id: 'VALIDATIONS_REQUIRED_VALID_SEARCH',
			primitiveType: PApiPrimitiveTypes.Search,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Search, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoUrl =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'url',
			id: 'VALIDATIONS_REQUIRED_VALID_URL',
			primitiveType: PApiPrimitiveTypes.Url,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Url, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoIban =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Iban>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'iban',
			id: 'VALIDATIONS_REQUIRED_VALID_IBAN',
			primitiveType: PApiPrimitiveTypes.Iban,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Iban, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoBic =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Bic>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'bic',
			id: 'VALIDATIONS_REQUIRED_VALID_BIC',
			primitiveType: PApiPrimitiveTypes.Bic,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Bic, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'dateTime',
			id: 'VALIDATIONS_REQUIRED_VALID_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.DateTime, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'date',
			id: 'VALIDATIONS_REQUIRED_VALID_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Date, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'VALIDATIONS_REQUIRED_VALID_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.DateExclusiveEnd, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'minutes',
			id: 'VALIDATIONS_REQUIRED_VALID_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Minutes, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'hours',
			id: 'VALIDATIONS_REQUIRED_VALID_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Hours, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'days',
			id: 'VALIDATIONS_REQUIRED_VALID_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Days, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'months',
			id: 'VALIDATIONS_REQUIRED_VALID_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Months, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'years',
			id: 'VALIDATIONS_REQUIRED_VALID_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Years, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'duration',
			id: 'VALIDATIONS_REQUIRED_VALID_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Duration, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'localTime',
			id: 'VALIDATIONS_REQUIRED_VALID_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.LocalTime, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoEnum =  new ApiAttributeInfo<StoryBookApiValidationsRequiredValid<ValidationMode>, StoryBookApiCountry>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredValid<ValidationMode>,
			name: 'enum',
			id: 'VALIDATIONS_REQUIRED_VALID_ENUM',
			primitiveType: PApiPrimitiveTypes.Enum,
			validations: function(this : StoryBookApiValidationsRequiredValid<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Enum, undefined);
							return null;
					},
				];
			},
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'number');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[2];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(2, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[3];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(3, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {string}
     */
	get string() : NullableInDraftMode<string, ValidationMode> {
		return this.data[4];
	}

	set string(v : NullableInDraftMode<string, ValidationMode>) {
        this.setterImpl(4, v, 'string');
	}

	/**
     * 
	 *
	 * @type {Tel}
     */
	get tel() : NullableInDraftMode<Tel, ValidationMode> {
		return this.data[5];
	}

	set tel(v : NullableInDraftMode<Tel, ValidationMode>) {
        this.setterImpl(5, v, 'tel');
	}

	/**
     * 
	 *
	 * @type {Email}
     */
	get email() : NullableInDraftMode<Email, ValidationMode> {
		return this.data[6];
	}

	set email(v : NullableInDraftMode<Email, ValidationMode>) {
        this.setterImpl(6, v, 'email');
	}

	/**
     * 
	 *
	 * @type {Password}
     */
	get password() : NullableInDraftMode<Password, ValidationMode> {
		return this.data[7];
	}

	set password(v : NullableInDraftMode<Password, ValidationMode>) {
        this.setterImpl(7, v, 'password');
	}

	/**
     * 
	 *
	 * @type {PostalCode}
     */
	get postalCode() : NullableInDraftMode<PostalCode, ValidationMode> {
		return this.data[8];
	}

	set postalCode(v : NullableInDraftMode<PostalCode, ValidationMode>) {
        this.setterImpl(8, v, 'postalCode');
	}

	/**
     * 
	 *
	 * @type {Search}
     */
	get search() : NullableInDraftMode<Search, ValidationMode> {
		return this.data[9];
	}

	set search(v : NullableInDraftMode<Search, ValidationMode>) {
        this.setterImpl(9, v, 'search');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get url() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[10];
	}

	set url(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(10, v, 'url');
	}

	/**
     * 
	 *
	 * @type {Iban}
     */
	get iban() : NullableInDraftMode<Iban, ValidationMode> {
		return this.data[11];
	}

	set iban(v : NullableInDraftMode<Iban, ValidationMode>) {
        this.setterImpl(11, v, 'iban');
	}

	/**
     * 
	 *
	 * @type {Bic}
     */
	get bic() : NullableInDraftMode<Bic, ValidationMode> {
		return this.data[12];
	}

	set bic(v : NullableInDraftMode<Bic, ValidationMode>) {
        this.setterImpl(12, v, 'bic');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[13];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(13, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[14];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(14, v, 'date');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[15];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(15, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[16];
	}

	set minutes(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(16, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[17];
	}

	set hours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(17, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[18];
	}

	set days(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(18, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[19];
	}

	set months(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(19, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[20];
	}

	set years(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(20, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[21];
	}

	set duration(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(21, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[22];
	}

	set localTime(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(22, v, 'localTime');
	}

	/**
     * 
	 *
	 * @type {StoryBookApiCountry}
     */
	get enum() : NullableInDraftMode<StoryBookApiCountry, ValidationMode> {
		return this.data[23];
	}

	set enum(v : NullableInDraftMode<StoryBookApiCountry, ValidationMode>) {
        this.setterImpl(23, v, 'enum');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 24);

			data[1] = 5.5;
			data[2] = 5;
			data[3] = 5.2;
			data[4] = 'asd';
			data[5] = '01512639847';
			data[6] = 'hallo@dr-plano.de';
			data[7] = 'Drp123.';
			data[8] = '55346';
			data[9] = 'asd';
			data[10] = 'http://www.dr-plano.de';
			data[11] = 'DE89 3704 0044 0532 0130 00';
			data[12] = 'NOLADE21STS';
			data[13] = 1605178413788;
			data[14] = 1604444400000;
			data[15] = 1604444400000;
			data[16] = 5;
			data[17] = 5;
			data[18] = 5;
			data[19] = 3;
			data[20] = 4;
			data[21] = 1000;
			data[22] = 3600000;
			data[23] = StoryBookApiCountry.GERMANY;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '91';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '91', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsRequiredValid<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsRequiredFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsRequiredFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, StoryBookApiValidationsRequiredFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, StoryBookApiValidationsRequiredFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_REQUIRED_FAILS',
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'number',
			id: 'VALIDATIONS_REQUIRED_FAILS_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.number, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_REQUIRED_FAILS_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Integer, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_REQUIRED_FAILS_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Currency, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoString =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, string>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'string',
			id: 'VALIDATIONS_REQUIRED_FAILS_STRING',
			primitiveType: PApiPrimitiveTypes.string,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.string, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoTel =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Tel>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'tel',
			id: 'VALIDATIONS_REQUIRED_FAILS_TEL',
			primitiveType: PApiPrimitiveTypes.Tel,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Tel, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoEmail =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Email>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'email',
			id: 'VALIDATIONS_REQUIRED_FAILS_EMAIL',
			primitiveType: PApiPrimitiveTypes.Email,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Email, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoPassword =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Password>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'password',
			id: 'VALIDATIONS_REQUIRED_FAILS_PASSWORD',
			primitiveType: PApiPrimitiveTypes.Password,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Password, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoPostalCode =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, PostalCode>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'postalCode',
			id: 'VALIDATIONS_REQUIRED_FAILS_POSTAL_CODE',
			primitiveType: PApiPrimitiveTypes.PostalCode,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.PostalCode, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoSearch =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Search>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'search',
			id: 'VALIDATIONS_REQUIRED_FAILS_SEARCH',
			primitiveType: PApiPrimitiveTypes.Search,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Search, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoUrl =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Url>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'url',
			id: 'VALIDATIONS_REQUIRED_FAILS_URL',
			primitiveType: PApiPrimitiveTypes.Url,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Url, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoIban =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Iban>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'iban',
			id: 'VALIDATIONS_REQUIRED_FAILS_IBAN',
			primitiveType: PApiPrimitiveTypes.Iban,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Iban, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoBic =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Bic>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'bic',
			id: 'VALIDATIONS_REQUIRED_FAILS_BIC',
			primitiveType: PApiPrimitiveTypes.Bic,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Bic, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'dateTime',
			id: 'VALIDATIONS_REQUIRED_FAILS_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.DateTime, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'date',
			id: 'VALIDATIONS_REQUIRED_FAILS_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Date, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'VALIDATIONS_REQUIRED_FAILS_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.DateExclusiveEnd, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'minutes',
			id: 'VALIDATIONS_REQUIRED_FAILS_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Minutes, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'hours',
			id: 'VALIDATIONS_REQUIRED_FAILS_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Hours, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'days',
			id: 'VALIDATIONS_REQUIRED_FAILS_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Days, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'months',
			id: 'VALIDATIONS_REQUIRED_FAILS_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Months, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'years',
			id: 'VALIDATIONS_REQUIRED_FAILS_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Years, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'duration',
			id: 'VALIDATIONS_REQUIRED_FAILS_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Duration, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'localTime',
			id: 'VALIDATIONS_REQUIRED_FAILS_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.LocalTime, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoEnum =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, StoryBookApiCountry>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'enum',
			id: 'VALIDATIONS_REQUIRED_FAILS_ENUM',
			primitiveType: PApiPrimitiveTypes.Enum,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Enum, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});
	attributeInfoImage =  new ApiAttributeInfo<StoryBookApiValidationsRequiredFails<ValidationMode>, Image>({
			apiObjWrapper: this as any as StoryBookApiValidationsRequiredFails<ValidationMode>,
			name: 'image',
			id: 'VALIDATIONS_REQUIRED_FAILS_IMAGE',
			primitiveType: PApiPrimitiveTypes.Image,
			validations: function(this : StoryBookApiValidationsRequiredFails<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.required(PApiPrimitiveTypes.Image, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe ist Pflicht.',
			}
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'number');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[2];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(2, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[3];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(3, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {string}
     */
	get string() : NullableInDraftMode<string, ValidationMode> {
		return this.data[4];
	}

	set string(v : NullableInDraftMode<string, ValidationMode>) {
        this.setterImpl(4, v, 'string');
	}

	/**
     * 
	 *
	 * @type {Tel}
     */
	get tel() : NullableInDraftMode<Tel, ValidationMode> {
		return this.data[5];
	}

	set tel(v : NullableInDraftMode<Tel, ValidationMode>) {
        this.setterImpl(5, v, 'tel');
	}

	/**
     * 
	 *
	 * @type {Email}
     */
	get email() : NullableInDraftMode<Email, ValidationMode> {
		return this.data[6];
	}

	set email(v : NullableInDraftMode<Email, ValidationMode>) {
        this.setterImpl(6, v, 'email');
	}

	/**
     * 
	 *
	 * @type {Password}
     */
	get password() : NullableInDraftMode<Password, ValidationMode> {
		return this.data[7];
	}

	set password(v : NullableInDraftMode<Password, ValidationMode>) {
        this.setterImpl(7, v, 'password');
	}

	/**
     * 
	 *
	 * @type {PostalCode}
     */
	get postalCode() : NullableInDraftMode<PostalCode, ValidationMode> {
		return this.data[8];
	}

	set postalCode(v : NullableInDraftMode<PostalCode, ValidationMode>) {
        this.setterImpl(8, v, 'postalCode');
	}

	/**
     * 
	 *
	 * @type {Search}
     */
	get search() : NullableInDraftMode<Search, ValidationMode> {
		return this.data[9];
	}

	set search(v : NullableInDraftMode<Search, ValidationMode>) {
        this.setterImpl(9, v, 'search');
	}

	/**
     * 
	 *
	 * @type {Url}
     */
	get url() : NullableInDraftMode<Url, ValidationMode> {
		return this.data[10];
	}

	set url(v : NullableInDraftMode<Url, ValidationMode>) {
        this.setterImpl(10, v, 'url');
	}

	/**
     * 
	 *
	 * @type {Iban}
     */
	get iban() : NullableInDraftMode<Iban, ValidationMode> {
		return this.data[11];
	}

	set iban(v : NullableInDraftMode<Iban, ValidationMode>) {
        this.setterImpl(11, v, 'iban');
	}

	/**
     * 
	 *
	 * @type {Bic}
     */
	get bic() : NullableInDraftMode<Bic, ValidationMode> {
		return this.data[12];
	}

	set bic(v : NullableInDraftMode<Bic, ValidationMode>) {
        this.setterImpl(12, v, 'bic');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[13];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(13, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[14];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(14, v, 'date');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[15];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(15, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : Minutes | null {
		return this.data[16];
	}

	set minutes(v : Minutes | null) {
        this.setterImpl(16, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : Hours | null {
		return this.data[17];
	}

	set hours(v : Hours | null) {
        this.setterImpl(17, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : Days | null {
		return this.data[18];
	}

	set days(v : Days | null) {
        this.setterImpl(18, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : Months | null {
		return this.data[19];
	}

	set months(v : Months | null) {
        this.setterImpl(19, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : Years | null {
		return this.data[20];
	}

	set years(v : Years | null) {
        this.setterImpl(20, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : Duration | null {
		return this.data[21];
	}

	set duration(v : Duration | null) {
        this.setterImpl(21, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : LocalTime | null {
		return this.data[22];
	}

	set localTime(v : LocalTime | null) {
        this.setterImpl(22, v, 'localTime');
	}

	/**
     * 
	 *
	 * @type {StoryBookApiCountry}
     */
	get enum() : NullableInDraftMode<StoryBookApiCountry, ValidationMode> {
		return this.data[23];
	}

	set enum(v : NullableInDraftMode<StoryBookApiCountry, ValidationMode>) {
        this.setterImpl(23, v, 'enum');
	}

	/**
     * 
	 *
	 * @type {Image}
     */
	get image() : NullableInDraftMode<Image, ValidationMode> {
		const path = this.data[24] as string;
		return path ? Config.API_IMAGE_BASE_URL + path : path;
	}

	set image(v : NullableInDraftMode<Image, ValidationMode>) {
        this.setterImpl(24, v, 'image');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 25);

			data[4] = '';
			data[5] = '';
			data[6] = '';
			data[7] = '';
			data[8] = '';
			data[9] = '';
			data[10] = '';
			data[11] = '';
			data[12] = '';
			data[24] = '';
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '92';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '92', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsRequiredFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMin<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMin as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.validWrapper.parent = this as any as StoryBookApiValidationsMin<ValidationMode>;
		this.failsWrapper.parent = this as any as StoryBookApiValidationsMin<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMin<ValidationMode>, StoryBookApiValidationsMin<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMin<ValidationMode>, StoryBookApiValidationsMin<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMin<ValidationMode>,
			name: 'min',
			id: 'VALIDATIONS_MIN',
		});

	private validWrapper : StoryBookApiValidationsMinValid<ValidationMode> = new StoryBookApiValidationsMinValid<ValidationMode>(this.api);

	/**
     * 
     */
	get valid() : StoryBookApiValidationsMinValid<ValidationMode> {
		return this.validWrapper;
	}

	set validTestSetter(v : StoryBookApiValidationsMinValid<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'valid', () => {this.validWrapper = v;});
	}

	private failsWrapper : StoryBookApiValidationsMinFails<ValidationMode> = new StoryBookApiValidationsMinFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsMinFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsMinFails<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.validWrapper._fixIds(_idReplacements);
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.validWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.failsWrapper._updateRawData(data ? data[2] : null, generateMissingData);
	}

	protected get dni() : string {
		return '64';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '64', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMin<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMinValid<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMinValid as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.compareConstWrapper.parent = this as any as StoryBookApiValidationsMinValid<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMinValid<ValidationMode>, StoryBookApiValidationsMinValid<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMinValid<ValidationMode>, StoryBookApiValidationsMinValid<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValid<ValidationMode>,
			name: 'valid',
			id: 'VALIDATIONS_MIN_VALID',
		});

	private compareConstWrapper : StoryBookApiValidationsMinValidCompareConst<ValidationMode> = new StoryBookApiValidationsMinValidCompareConst<ValidationMode>(this.api);

	/**
     * 
     */
	get compareConst() : StoryBookApiValidationsMinValidCompareConst<ValidationMode> {
		return this.compareConstWrapper;
	}

	set compareConstTestSetter(v : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'compareConst', () => {this.compareConstWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.compareConstWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.compareConstWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '140';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '140', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMinValid<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMinValidCompareConst<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMinValidCompareConst as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, StoryBookApiValidationsMinValidCompareConst<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, StoryBookApiValidationsMinValidCompareConst<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'compareConst',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST',
		});
	attributeInfoNumberIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'numberIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_NUMBER_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoNumberThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'numberThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_NUMBER_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoNumberOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'numberOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_NUMBER_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoIntegerIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'integerIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_INTEGER_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoIntegerThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'integerThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_INTEGER_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoIntegerOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'integerOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_INTEGER_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'currencyIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_CURRENCY_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'currencyThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_CURRENCY_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'currencyOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_CURRENCY_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyOtherIsNegative =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'currencyOtherIsNegative',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_IS_NEGATIVE',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(-10, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTimeIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateTimeIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_TIME_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1577833200000, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTimeThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateTimeThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_TIME_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1577833200000, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTimeOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateTimeOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_TIME_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1577833200000, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1577833200000, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEndIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateExclusiveEndIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1577833200000, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEndThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateExclusiveEndThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1577833200000, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEndOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'dateExclusiveEndOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutesIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'minutesIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_MINUTES_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutesThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'minutesThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_MINUTES_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutesOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'minutesOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_MINUTES_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHoursIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'hoursIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_HOURS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHoursThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'hoursThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_HOURS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHoursOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'hoursOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_HOURS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDaysIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'daysIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DAYS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDaysThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'daysThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DAYS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDaysOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'daysOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DAYS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonthsIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'monthsIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_MONTHS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonthsThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'monthsThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_MONTHS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonthsOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'monthsOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_MONTHS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYearsIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'yearsIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_YEARS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYearsThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'yearsThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_YEARS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYearsOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'yearsOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_YEARS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDurationIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'durationIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DURATION_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDurationThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'durationThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DURATION_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDurationOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'durationOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_DURATION_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTimeIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'localTimeIsEqual',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_LOCAL_TIME_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(3600000, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTimeThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'localTimeThisIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_LOCAL_TIME_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(3600000, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTimeOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMinValidCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinValidCompareConst<ValidationMode>,
			name: 'localTimeOtherIsNull',
			id: 'VALIDATIONS_MIN_VALID_COMPARE_CONST_LOCAL_TIME_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMinValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get numberIsEqual() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set numberIsEqual(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'numberIsEqual');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get numberThisIsNull() : number | null {
		return this.data[2];
	}

	set numberThisIsNull(v : number | null) {
        this.setterImpl(2, v, 'numberThisIsNull');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get numberOtherIsNull() : NullableInDraftMode<number, ValidationMode> {
		return this.data[3];
	}

	set numberOtherIsNull(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(3, v, 'numberOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerIsEqual() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[4];
	}

	set integerIsEqual(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(4, v, 'integerIsEqual');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerThisIsNull() : Integer | null {
		return this.data[5];
	}

	set integerThisIsNull(v : Integer | null) {
        this.setterImpl(5, v, 'integerThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerOtherIsNull() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[6];
	}

	set integerOtherIsNull(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(6, v, 'integerOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyIsEqual() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[7];
	}

	set currencyIsEqual(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(7, v, 'currencyIsEqual');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyThisIsNull() : Currency | null {
		return this.data[8];
	}

	set currencyThisIsNull(v : Currency | null) {
        this.setterImpl(8, v, 'currencyThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyOtherIsNull() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[9];
	}

	set currencyOtherIsNull(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(9, v, 'currencyOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyOtherIsNegative() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[10];
	}

	set currencyOtherIsNegative(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(10, v, 'currencyOtherIsNegative');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeIsEqual() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[11];
	}

	set dateTimeIsEqual(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(11, v, 'dateTimeIsEqual');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeThisIsNull() : DateTime | null {
		return this.data[12];
	}

	set dateTimeThisIsNull(v : DateTime | null) {
        this.setterImpl(12, v, 'dateTimeThisIsNull');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeOtherIsNull() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[13];
	}

	set dateTimeOtherIsNull(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(13, v, 'dateTimeOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateIsEqual() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[14];
	}

	set dateIsEqual(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(14, v, 'dateIsEqual');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateThisIsNull() : Date | null {
		return this.data[15];
	}

	set dateThisIsNull(v : Date | null) {
        this.setterImpl(15, v, 'dateThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateOtherIsNull() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[16];
	}

	set dateOtherIsNull(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(16, v, 'dateOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndIsEqual() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[17];
	}

	set dateExclusiveEndIsEqual(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(17, v, 'dateExclusiveEndIsEqual');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndThisIsNull() : DateExclusiveEnd | null {
		return this.data[18];
	}

	set dateExclusiveEndThisIsNull(v : DateExclusiveEnd | null) {
        this.setterImpl(18, v, 'dateExclusiveEndThisIsNull');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndOtherIsNull() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[19];
	}

	set dateExclusiveEndOtherIsNull(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(19, v, 'dateExclusiveEndOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesIsEqual() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[20];
	}

	set minutesIsEqual(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(20, v, 'minutesIsEqual');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesThisIsNull() : Minutes | null {
		return this.data[21];
	}

	set minutesThisIsNull(v : Minutes | null) {
        this.setterImpl(21, v, 'minutesThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesOtherIsNull() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[22];
	}

	set minutesOtherIsNull(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(22, v, 'minutesOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursIsEqual() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[23];
	}

	set hoursIsEqual(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(23, v, 'hoursIsEqual');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursThisIsNull() : Hours | null {
		return this.data[24];
	}

	set hoursThisIsNull(v : Hours | null) {
        this.setterImpl(24, v, 'hoursThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursOtherIsNull() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[25];
	}

	set hoursOtherIsNull(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(25, v, 'hoursOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysIsEqual() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[26];
	}

	set daysIsEqual(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(26, v, 'daysIsEqual');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysThisIsNull() : Days | null {
		return this.data[27];
	}

	set daysThisIsNull(v : Days | null) {
        this.setterImpl(27, v, 'daysThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysOtherIsNull() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[28];
	}

	set daysOtherIsNull(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(28, v, 'daysOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsIsEqual() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[29];
	}

	set monthsIsEqual(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(29, v, 'monthsIsEqual');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsThisIsNull() : Months | null {
		return this.data[30];
	}

	set monthsThisIsNull(v : Months | null) {
        this.setterImpl(30, v, 'monthsThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsOtherIsNull() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[31];
	}

	set monthsOtherIsNull(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(31, v, 'monthsOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsIsEqual() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[32];
	}

	set yearsIsEqual(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(32, v, 'yearsIsEqual');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsThisIsNull() : Years | null {
		return this.data[33];
	}

	set yearsThisIsNull(v : Years | null) {
        this.setterImpl(33, v, 'yearsThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsOtherIsNull() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[34];
	}

	set yearsOtherIsNull(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(34, v, 'yearsOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationIsEqual() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[35];
	}

	set durationIsEqual(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(35, v, 'durationIsEqual');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationThisIsNull() : Duration | null {
		return this.data[36];
	}

	set durationThisIsNull(v : Duration | null) {
        this.setterImpl(36, v, 'durationThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationOtherIsNull() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[37];
	}

	set durationOtherIsNull(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(37, v, 'durationOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeIsEqual() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[38];
	}

	set localTimeIsEqual(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(38, v, 'localTimeIsEqual');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeThisIsNull() : LocalTime | null {
		return this.data[39];
	}

	set localTimeThisIsNull(v : LocalTime | null) {
        this.setterImpl(39, v, 'localTimeThisIsNull');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeOtherIsNull() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[40];
	}

	set localTimeOtherIsNull(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(40, v, 'localTimeOtherIsNull');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 41);

			data[1] = 5;
			data[3] = 5;
			data[4] = 5;
			data[6] = 5;
			data[7] = 5;
			data[9] = 5;
			data[10] = -9;
			data[11] = 1577833200000;
			data[13] = 1577833200000;
			data[14] = 1577833200000;
			data[16] = 1577833200000;
			data[17] = 1577833200000;
			data[19] = 1577833200000;
			data[20] = 5;
			data[22] = 5;
			data[23] = 5;
			data[25] = 5;
			data[26] = 5;
			data[28] = 5;
			data[29] = 5;
			data[31] = 5;
			data[32] = 5;
			data[34] = 5;
			data[35] = 5;
			data[37] = 5;
			data[38] = 3600000;
			data[40] = 3600000;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '142';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '142', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMinValidCompareConst<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMinFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMinFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.compareConstWrapper.parent = this as any as StoryBookApiValidationsMinFails<ValidationMode>;
		this.compareNodeWrapper.parent = this as any as StoryBookApiValidationsMinFails<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMinFails<ValidationMode>, StoryBookApiValidationsMinFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMinFails<ValidationMode>, StoryBookApiValidationsMinFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_MIN_FAILS',
		});

	private compareConstWrapper : StoryBookApiValidationsMinFailsCompareConst<ValidationMode> = new StoryBookApiValidationsMinFailsCompareConst<ValidationMode>(this.api);

	/**
     * 
     */
	get compareConst() : StoryBookApiValidationsMinFailsCompareConst<ValidationMode> {
		return this.compareConstWrapper;
	}

	set compareConstTestSetter(v : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'compareConst', () => {this.compareConstWrapper = v;});
	}

	private compareNodeWrapper : StoryBookApiValidationsMinFailsCompareNode<ValidationMode> = new StoryBookApiValidationsMinFailsCompareNode<ValidationMode>(this.api);

	/**
     * 
     */
	get compareNode() : StoryBookApiValidationsMinFailsCompareNode<ValidationMode> {
		return this.compareNodeWrapper;
	}

	set compareNodeTestSetter(v : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'compareNode', () => {this.compareNodeWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.compareConstWrapper._fixIds(_idReplacements);
		this.compareNodeWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.compareConstWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.compareNodeWrapper._updateRawData(data ? data[2] : null, generateMissingData);
	}

	protected get dni() : string {
		return '141';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '141', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMinFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMinFailsCompareConst<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMinFailsCompareConst as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, StoryBookApiValidationsMinFailsCompareConst<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, StoryBookApiValidationsMinFailsCompareConst<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'compareConst',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST',
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'number',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7.5, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7.5« eingeben.',
			}
		});
	attributeInfoNumberEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'numberEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_NUMBER_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, false, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »5« eingeben.',
			}
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoIntegerEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'integerEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_INTEGER_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, false, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »7« eingeben.',
			}
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoCurrencyEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'currencyEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_CURRENCY_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, false, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »7« eingeben.',
			}
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'dateTime',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1605135600000, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens die Zeit »12.11.20, 00:00« eingeben.',
			}
		});
	attributeInfoDateTimeEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'dateTimeEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_TIME_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1605135600000, false, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zeit später als »12.11.20, 00:00« eingeben.',
			}
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'date',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1605135600000, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens das Datum »12.11.2020« eingeben.',
			}
		});
	attributeInfoDateEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'dateEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1605135600000, false, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte ein Datum später als »12.11.2020« eingeben.',
			}
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1605135600000, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens das Datum »12.11.2020« eingeben.',
			}
		});
	attributeInfoDateExclusiveEndEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'dateExclusiveEndEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(1605135600000, false, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte ein Datum später als »12.11.2020« eingeben.',
			}
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'minutes',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoMinutesEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'minutesEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_MINUTES_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, false, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »7« eingeben.',
			}
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'hours',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoHoursEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'hoursEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_HOURS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, false, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »7« eingeben.',
			}
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'days',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoDaysEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'daysEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DAYS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, false, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »7« eingeben.',
			}
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'months',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoMonthsEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'monthsEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_MONTHS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, false, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »5« eingeben.',
			}
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'years',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoYearsEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'yearsEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_YEARS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, false, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »5« eingeben.',
			}
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'duration',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens »7« eingeben.',
			}
		});
	attributeInfoDurationEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'durationEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_DURATION_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(7, false, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl größer als »7« eingeben.',
			}
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'localTime',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(3600000, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte mindestens die Zeit »01:00« eingeben.',
			}
		});
	attributeInfoLocalTimeEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareConst<ValidationMode>,
			name: 'localTimeEqualNotAllowed',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_CONST_LOCAL_TIME_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMinFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(3600000, false, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zeit später als »01:00« eingeben.',
			}
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'number');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get numberEqualNotAllowed() : NullableInDraftMode<number, ValidationMode> {
		return this.data[2];
	}

	set numberEqualNotAllowed(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(2, v, 'numberEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[3];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(3, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerEqualNotAllowed() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[4];
	}

	set integerEqualNotAllowed(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(4, v, 'integerEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[5];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(5, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyEqualNotAllowed() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[6];
	}

	set currencyEqualNotAllowed(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(6, v, 'currencyEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[7];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(7, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeEqualNotAllowed() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[8];
	}

	set dateTimeEqualNotAllowed(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(8, v, 'dateTimeEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[9];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(9, v, 'date');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateEqualNotAllowed() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[10];
	}

	set dateEqualNotAllowed(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(10, v, 'dateEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[11];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(11, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndEqualNotAllowed() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[12];
	}

	set dateExclusiveEndEqualNotAllowed(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(12, v, 'dateExclusiveEndEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[13];
	}

	set minutes(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(13, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesEqualNotAllowed() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[14];
	}

	set minutesEqualNotAllowed(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(14, v, 'minutesEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[15];
	}

	set hours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(15, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursEqualNotAllowed() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[16];
	}

	set hoursEqualNotAllowed(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(16, v, 'hoursEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[17];
	}

	set days(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(17, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysEqualNotAllowed() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[18];
	}

	set daysEqualNotAllowed(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(18, v, 'daysEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[19];
	}

	set months(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(19, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsEqualNotAllowed() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[20];
	}

	set monthsEqualNotAllowed(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(20, v, 'monthsEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[21];
	}

	set years(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(21, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsEqualNotAllowed() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[22];
	}

	set yearsEqualNotAllowed(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(22, v, 'yearsEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[23];
	}

	set duration(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(23, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationEqualNotAllowed() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[24];
	}

	set durationEqualNotAllowed(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(24, v, 'durationEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[25];
	}

	set localTime(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(25, v, 'localTime');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeEqualNotAllowed() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[26];
	}

	set localTimeEqualNotAllowed(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(26, v, 'localTimeEqualNotAllowed');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 27);

			data[1] = 5;
			data[2] = 5;
			data[3] = 5;
			data[4] = 7;
			data[5] = 5;
			data[6] = 7;
			data[7] = 1577833200000;
			data[8] = 1605135600000;
			data[9] = 1577833200000;
			data[10] = 1605135600000;
			data[11] = 1577833200000;
			data[12] = 1605135600000;
			data[13] = 5;
			data[14] = 7;
			data[15] = 5;
			data[16] = 7;
			data[17] = 5;
			data[18] = 7;
			data[19] = 5;
			data[20] = 5;
			data[21] = 5;
			data[22] = 5;
			data[23] = 5;
			data[24] = 7;
			data[25] = 1800000;
			data[26] = 3600000;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '183';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '183', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMinFailsCompareConst<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMinFailsCompareNode<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMinFailsCompareNode as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, StoryBookApiValidationsMinFailsCompareNode<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, StoryBookApiValidationsMinFailsCompareNode<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'compareNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE',
		});
	attributeInfoNumberComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'numberComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'number',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.numberComparedNode, true, PApiPrimitiveTypes.number, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE', undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE«.',
			}
		});
	attributeInfoIntegerComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'integerComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Integer,
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.integerComparedNode, true, PApiPrimitiveTypes.Integer, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE«.',
			}
		});
	attributeInfoCurrencyComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'currencyComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Currency,
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.currencyComparedNode, true, PApiPrimitiveTypes.Currency, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE«.',
			}
		});
	attributeInfoDateTimeComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'dateTimeComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.DateTime,
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'dateTime',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.dateTimeComparedNode, true, PApiPrimitiveTypes.DateTime, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE«.',
			}
		});
	attributeInfoDateComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'dateComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Date,
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'date',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.dateComparedNode, true, PApiPrimitiveTypes.Date, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_COMPARED_NODE«.',
			}
		});
	attributeInfoDateExclusiveEndComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'dateExclusiveEndComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.dateExclusiveEndComparedNode, true, PApiPrimitiveTypes.DateExclusiveEnd, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE«.',
			}
		});
	attributeInfoMinutesComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'minutesComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Minutes,
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'minutes',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.minutesComparedNode, true, PApiPrimitiveTypes.Minutes, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE«.',
			}
		});
	attributeInfoHoursComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'hoursComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Hours,
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'hours',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.hoursComparedNode, true, PApiPrimitiveTypes.Hours, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE«.',
			}
		});
	attributeInfoDaysComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'daysComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Days,
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'days',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.daysComparedNode, true, PApiPrimitiveTypes.Days, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE«.',
			}
		});
	attributeInfoMonthsComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'monthsComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Months,
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'months',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.monthsComparedNode, true, PApiPrimitiveTypes.Months, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE«.',
			}
		});
	attributeInfoYearsComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'yearsComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Years,
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'years',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.yearsComparedNode, true, PApiPrimitiveTypes.Years, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE«.',
			}
		});
	attributeInfoDurationComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'durationComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Duration,
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'duration',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.durationComparedNode, true, PApiPrimitiveTypes.Duration, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE«.',
			}
		});
	attributeInfoLocalTimeComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'localTimeComparedNode',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.LocalTime,
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiValidationsMinFailsCompareNode<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMinFailsCompareNode<ValidationMode>,
			name: 'localTime',
			id: 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMinFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(() => this.localTimeComparedNode, true, PApiPrimitiveTypes.LocalTime, 'VALIDATIONS_MIN_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht kleiner sein als »VALIDATIONS_MIN_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE«.',
			}
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get numberComparedNode() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set numberComparedNode(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'numberComparedNode');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[2];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(2, v, 'number');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerComparedNode() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[3];
	}

	set integerComparedNode(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(3, v, 'integerComparedNode');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[4];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(4, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyComparedNode() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[5];
	}

	set currencyComparedNode(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(5, v, 'currencyComparedNode');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[6];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(6, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeComparedNode() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[7];
	}

	set dateTimeComparedNode(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(7, v, 'dateTimeComparedNode');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[8];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(8, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateComparedNode() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[9];
	}

	set dateComparedNode(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(9, v, 'dateComparedNode');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[10];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(10, v, 'date');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndComparedNode() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[11];
	}

	set dateExclusiveEndComparedNode(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(11, v, 'dateExclusiveEndComparedNode');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[12];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(12, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesComparedNode() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[13];
	}

	set minutesComparedNode(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(13, v, 'minutesComparedNode');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[14];
	}

	set minutes(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(14, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursComparedNode() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[15];
	}

	set hoursComparedNode(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(15, v, 'hoursComparedNode');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[16];
	}

	set hours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(16, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysComparedNode() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[17];
	}

	set daysComparedNode(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(17, v, 'daysComparedNode');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[18];
	}

	set days(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(18, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsComparedNode() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[19];
	}

	set monthsComparedNode(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(19, v, 'monthsComparedNode');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[20];
	}

	set months(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(20, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsComparedNode() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[21];
	}

	set yearsComparedNode(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(21, v, 'yearsComparedNode');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[22];
	}

	set years(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(22, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationComparedNode() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[23];
	}

	set durationComparedNode(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(23, v, 'durationComparedNode');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[24];
	}

	set duration(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(24, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeComparedNode() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[25];
	}

	set localTimeComparedNode(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(25, v, 'localTimeComparedNode');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[26];
	}

	set localTime(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(26, v, 'localTime');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 27);

			data[1] = 7;
			data[2] = 5;
			data[3] = 7;
			data[4] = 5;
			data[5] = 7;
			data[6] = 5;
			data[7] = 1577919600000;
			data[8] = 1577833200000;
			data[9] = 1577919600000;
			data[10] = 1577833200000;
			data[11] = 1577919600000;
			data[12] = 1577833200000;
			data[13] = 7;
			data[14] = 5;
			data[15] = 7;
			data[16] = 5;
			data[17] = 7;
			data[18] = 5;
			data[19] = 7;
			data[20] = 5;
			data[21] = 7;
			data[22] = 5;
			data[23] = 7;
			data[24] = 5;
			data[25] = 3600000;
			data[26] = 1800000;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '184';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '184', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMinFailsCompareNode<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMax<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMax as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.validWrapper.parent = this as any as StoryBookApiValidationsMax<ValidationMode>;
		this.failsWrapper.parent = this as any as StoryBookApiValidationsMax<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMax<ValidationMode>, StoryBookApiValidationsMax<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMax<ValidationMode>, StoryBookApiValidationsMax<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMax<ValidationMode>,
			name: 'max',
			id: 'VALIDATIONS_MAX',
		});

	private validWrapper : StoryBookApiValidationsMaxValid<ValidationMode> = new StoryBookApiValidationsMaxValid<ValidationMode>(this.api);

	/**
     * 
     */
	get valid() : StoryBookApiValidationsMaxValid<ValidationMode> {
		return this.validWrapper;
	}

	set validTestSetter(v : StoryBookApiValidationsMaxValid<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'valid', () => {this.validWrapper = v;});
	}

	private failsWrapper : StoryBookApiValidationsMaxFails<ValidationMode> = new StoryBookApiValidationsMaxFails<ValidationMode>(this.api);

	/**
     * 
     */
	get fails() : StoryBookApiValidationsMaxFails<ValidationMode> {
		return this.failsWrapper;
	}

	set failsTestSetter(v : StoryBookApiValidationsMaxFails<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'fails', () => {this.failsWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.validWrapper._fixIds(_idReplacements);
		this.failsWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.validWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.failsWrapper._updateRawData(data ? data[2] : null, generateMissingData);
	}

	protected get dni() : string {
		return '65';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '65', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMax<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMaxValid<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMaxValid as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.compareConstWrapper.parent = this as any as StoryBookApiValidationsMaxValid<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMaxValid<ValidationMode>, StoryBookApiValidationsMaxValid<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMaxValid<ValidationMode>, StoryBookApiValidationsMaxValid<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValid<ValidationMode>,
			name: 'valid',
			id: 'VALIDATIONS_MAX_VALID',
		});

	private compareConstWrapper : StoryBookApiValidationsMaxValidCompareConst<ValidationMode> = new StoryBookApiValidationsMaxValidCompareConst<ValidationMode>(this.api);

	/**
     * 
     */
	get compareConst() : StoryBookApiValidationsMaxValidCompareConst<ValidationMode> {
		return this.compareConstWrapper;
	}

	set compareConstTestSetter(v : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'compareConst', () => {this.compareConstWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.compareConstWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 2);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.compareConstWrapper._updateRawData(data ? data[1] : null, generateMissingData);
	}

	protected get dni() : string {
		return '237';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '237', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMaxValid<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMaxValidCompareConst<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMaxValidCompareConst as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, StoryBookApiValidationsMaxValidCompareConst<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, StoryBookApiValidationsMaxValidCompareConst<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'compareConst',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST',
		});
	attributeInfoNumberIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'numberIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_NUMBER_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoNumberThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'numberThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_NUMBER_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoNumberOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'numberOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_NUMBER_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoIntegerIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'integerIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_INTEGER_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoIntegerThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'integerThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_INTEGER_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoIntegerOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'integerOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_INTEGER_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'currencyIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_CURRENCY_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'currencyThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_CURRENCY_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(5, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoCurrencyOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'currencyOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_CURRENCY_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.min(null, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTimeIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateTimeIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_TIME_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1577919600000, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTimeThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateTimeThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_TIME_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1577919600000, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateTimeOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateTimeOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_TIME_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1577919600000, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1577919600000, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEndIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateExclusiveEndIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1577919600000, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEndThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateExclusiveEndThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1577919600000, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDateExclusiveEndOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'dateExclusiveEndOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DATE_EXCLUSIVE_END_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutesIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'minutesIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_MINUTES_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutesThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'minutesThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_MINUTES_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMinutesOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'minutesOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_MINUTES_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHoursIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'hoursIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_HOURS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHoursThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'hoursThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_HOURS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoHoursOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'hoursOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_HOURS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDaysIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'daysIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DAYS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDaysThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'daysThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DAYS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDaysOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'daysOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DAYS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonthsIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'monthsIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_MONTHS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonthsThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'monthsThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_MONTHS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoMonthsOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'monthsOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_MONTHS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYearsIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'yearsIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_YEARS_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYearsThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'yearsThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_YEARS_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoYearsOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'yearsOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_YEARS_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDurationIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'durationIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DURATION_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDurationThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'durationThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DURATION_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(5, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoDurationOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'durationOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_DURATION_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTimeIsEqual =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'localTimeIsEqual',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_LOCAL_TIME_IS_EQUAL',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(3600000, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTimeThisIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'localTimeThisIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_LOCAL_TIME_THIS_IS_NULL',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(3600000, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
		});
	attributeInfoLocalTimeOtherIsNull =  new ApiAttributeInfo<StoryBookApiValidationsMaxValidCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxValidCompareConst<ValidationMode>,
			name: 'localTimeOtherIsNull',
			id: 'VALIDATIONS_MAX_VALID_COMPARE_CONST_LOCAL_TIME_OTHER_IS_NULL',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMaxValidCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(null, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get numberIsEqual() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set numberIsEqual(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'numberIsEqual');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get numberThisIsNull() : NullableInDraftMode<number, ValidationMode> {
		return this.data[2];
	}

	set numberThisIsNull(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(2, v, 'numberThisIsNull');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get numberOtherIsNull() : NullableInDraftMode<number, ValidationMode> {
		return this.data[3];
	}

	set numberOtherIsNull(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(3, v, 'numberOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerIsEqual() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[4];
	}

	set integerIsEqual(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(4, v, 'integerIsEqual');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerThisIsNull() : Integer | null {
		return this.data[5];
	}

	set integerThisIsNull(v : Integer | null) {
        this.setterImpl(5, v, 'integerThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerOtherIsNull() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[6];
	}

	set integerOtherIsNull(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(6, v, 'integerOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyIsEqual() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[7];
	}

	set currencyIsEqual(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(7, v, 'currencyIsEqual');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyThisIsNull() : Currency | null {
		return this.data[8];
	}

	set currencyThisIsNull(v : Currency | null) {
        this.setterImpl(8, v, 'currencyThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyOtherIsNull() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[9];
	}

	set currencyOtherIsNull(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(9, v, 'currencyOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeIsEqual() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[10];
	}

	set dateTimeIsEqual(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(10, v, 'dateTimeIsEqual');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeThisIsNull() : DateTime | null {
		return this.data[11];
	}

	set dateTimeThisIsNull(v : DateTime | null) {
        this.setterImpl(11, v, 'dateTimeThisIsNull');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeOtherIsNull() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[12];
	}

	set dateTimeOtherIsNull(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(12, v, 'dateTimeOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateIsEqual() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[13];
	}

	set dateIsEqual(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(13, v, 'dateIsEqual');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateThisIsNull() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[14];
	}

	set dateThisIsNull(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(14, v, 'dateThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateOtherIsNull() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[15];
	}

	set dateOtherIsNull(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(15, v, 'dateOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndIsEqual() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[16];
	}

	set dateExclusiveEndIsEqual(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(16, v, 'dateExclusiveEndIsEqual');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndThisIsNull() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[17];
	}

	set dateExclusiveEndThisIsNull(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(17, v, 'dateExclusiveEndThisIsNull');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndOtherIsNull() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[18];
	}

	set dateExclusiveEndOtherIsNull(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(18, v, 'dateExclusiveEndOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesIsEqual() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[19];
	}

	set minutesIsEqual(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(19, v, 'minutesIsEqual');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesThisIsNull() : Minutes | null {
		return this.data[20];
	}

	set minutesThisIsNull(v : Minutes | null) {
        this.setterImpl(20, v, 'minutesThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesOtherIsNull() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[21];
	}

	set minutesOtherIsNull(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(21, v, 'minutesOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursIsEqual() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[22];
	}

	set hoursIsEqual(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(22, v, 'hoursIsEqual');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursThisIsNull() : Hours | null {
		return this.data[23];
	}

	set hoursThisIsNull(v : Hours | null) {
        this.setterImpl(23, v, 'hoursThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursOtherIsNull() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[24];
	}

	set hoursOtherIsNull(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(24, v, 'hoursOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysIsEqual() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[25];
	}

	set daysIsEqual(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(25, v, 'daysIsEqual');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysThisIsNull() : Days | null {
		return this.data[26];
	}

	set daysThisIsNull(v : Days | null) {
        this.setterImpl(26, v, 'daysThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysOtherIsNull() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[27];
	}

	set daysOtherIsNull(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(27, v, 'daysOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsIsEqual() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[28];
	}

	set monthsIsEqual(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(28, v, 'monthsIsEqual');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsThisIsNull() : Months | null {
		return this.data[29];
	}

	set monthsThisIsNull(v : Months | null) {
        this.setterImpl(29, v, 'monthsThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsOtherIsNull() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[30];
	}

	set monthsOtherIsNull(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(30, v, 'monthsOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsIsEqual() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[31];
	}

	set yearsIsEqual(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(31, v, 'yearsIsEqual');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsThisIsNull() : Years | null {
		return this.data[32];
	}

	set yearsThisIsNull(v : Years | null) {
        this.setterImpl(32, v, 'yearsThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsOtherIsNull() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[33];
	}

	set yearsOtherIsNull(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(33, v, 'yearsOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationIsEqual() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[34];
	}

	set durationIsEqual(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(34, v, 'durationIsEqual');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationThisIsNull() : Duration | null {
		return this.data[35];
	}

	set durationThisIsNull(v : Duration | null) {
        this.setterImpl(35, v, 'durationThisIsNull');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationOtherIsNull() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[36];
	}

	set durationOtherIsNull(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(36, v, 'durationOtherIsNull');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeIsEqual() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[37];
	}

	set localTimeIsEqual(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(37, v, 'localTimeIsEqual');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeThisIsNull() : LocalTime | null {
		return this.data[38];
	}

	set localTimeThisIsNull(v : LocalTime | null) {
        this.setterImpl(38, v, 'localTimeThisIsNull');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeOtherIsNull() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[39];
	}

	set localTimeOtherIsNull(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(39, v, 'localTimeOtherIsNull');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 40);

			data[1] = 5;
			data[3] = 5;
			data[4] = 5;
			data[6] = 5;
			data[7] = 5;
			data[9] = 5;
			data[10] = 1577919600000;
			data[12] = 1577919600000;
			data[13] = 1577919600000;
			data[15] = 1577919600000;
			data[16] = 1577919600000;
			data[18] = 1577919600000;
			data[19] = 5;
			data[21] = 5;
			data[22] = 5;
			data[24] = 5;
			data[25] = 5;
			data[27] = 5;
			data[28] = 5;
			data[30] = 5;
			data[31] = 5;
			data[33] = 5;
			data[34] = 5;
			data[36] = 5;
			data[37] = 3600000;
			data[39] = 3600000;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '239';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '239', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMaxValidCompareConst<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMaxFails<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMaxFails as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
		this.compareConstWrapper.parent = this as any as StoryBookApiValidationsMaxFails<ValidationMode>;
		this.compareNodeWrapper.parent = this as any as StoryBookApiValidationsMaxFails<ValidationMode>;
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMaxFails<ValidationMode>, StoryBookApiValidationsMaxFails<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMaxFails<ValidationMode>, StoryBookApiValidationsMaxFails<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFails<ValidationMode>,
			name: 'fails',
			id: 'VALIDATIONS_MAX_FAILS',
		});

	private compareConstWrapper : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode> = new StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>(this.api);

	/**
     * 
     */
	get compareConst() : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode> {
		return this.compareConstWrapper;
	}

	set compareConstTestSetter(v : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
        this.setterImpl(1, v.rawData, 'compareConst', () => {this.compareConstWrapper = v;});
	}

	private compareNodeWrapper : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode> = new StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>(this.api);

	/**
     * 
     */
	get compareNode() : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode> {
		return this.compareNodeWrapper;
	}

	set compareNodeTestSetter(v : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
        this.setterImpl(2, v.rawData, 'compareNode', () => {this.compareNodeWrapper = v;});
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
		this.compareConstWrapper._fixIds(_idReplacements);
		this.compareNodeWrapper._fixIds(_idReplacements);
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 3);

			if(data[1] === null)
				data[1] = Meta.createNewObject(false);
			if(data[2] === null)
				data[2] = Meta.createNewObject(false);
		}

		// propagate new raw data to children
		this.compareConstWrapper._updateRawData(data ? data[1] : null, generateMissingData);
		this.compareNodeWrapper._updateRawData(data ? data[2] : null, generateMissingData);
	}

	protected get dni() : string {
		return '238';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '238', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMaxFails<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMaxFailsCompareConst<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMaxFailsCompareConst as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'compareConst',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST',
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'number',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7.5, true, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7.5« eingeben.',
			}
		});
	attributeInfoNumberEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'numberEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_NUMBER_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7.5, false, PApiPrimitiveTypes.number, undefined, undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(1, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7.5« eingeben.',
			}
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoIntegerEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'integerEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_INTEGER_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Integer, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7,00 €« eingeben.',
			}
		});
	attributeInfoCurrencyEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'currencyEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_CURRENCY_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Currency, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'dateTime',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1605135600000, true, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens die Zeit »12.11.20, 00:00« eingeben.',
			}
		});
	attributeInfoDateTimeEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'dateTimeEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_TIME_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1605135600000, false, PApiPrimitiveTypes.DateTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zeit früher als »12.11.20, 00:00« eingeben.',
			}
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'date',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1605135600000, true, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens das Datum »12.11.2020« eingeben.',
			}
		});
	attributeInfoDateEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'dateEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1605135600000, false, PApiPrimitiveTypes.Date, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte ein Datum früher als »12.11.2020« eingeben.',
			}
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1605135600000, true, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens das Datum »12.11.2020« eingeben.',
			}
		});
	attributeInfoDateExclusiveEndEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'dateExclusiveEndEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DATE_EXCLUSIVE_END_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(1605135600000, false, PApiPrimitiveTypes.DateExclusiveEnd, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte ein Datum früher als »12.11.2020« eingeben.',
			}
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'minutes',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoMinutesEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'minutesEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_MINUTES_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Minutes, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'hours',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoHoursEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'hoursEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_HOURS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Hours, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'days',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoDaysEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'daysEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DAYS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Days, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'months',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoMonthsEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'monthsEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_MONTHS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Months, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'years',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoYearsEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'yearsEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_YEARS_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Years, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'duration',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, true, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens »7« eingeben.',
			}
		});
	attributeInfoDurationEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'durationEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_DURATION_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(7, false, PApiPrimitiveTypes.Duration, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zahl kleiner als »7« eingeben.',
			}
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'localTime',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(3600000, true, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte höchstens die Zeit »01:00« eingeben.',
			}
		});
	attributeInfoLocalTimeEqualNotAllowed =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>,
			name: 'localTimeEqualNotAllowed',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_CONST_LOCAL_TIME_EQUAL_NOT_ALLOWED',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareConst<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(3600000, false, PApiPrimitiveTypes.LocalTime, undefined, undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Bitte eine Zeit früher als »01:00« eingeben.',
			}
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'number');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get numberEqualNotAllowed() : NullableInDraftMode<number, ValidationMode> {
		return this.data[2];
	}

	set numberEqualNotAllowed(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(2, v, 'numberEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[3];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(3, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerEqualNotAllowed() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[4];
	}

	set integerEqualNotAllowed(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(4, v, 'integerEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[5];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(5, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyEqualNotAllowed() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[6];
	}

	set currencyEqualNotAllowed(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(6, v, 'currencyEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[7];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(7, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeEqualNotAllowed() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[8];
	}

	set dateTimeEqualNotAllowed(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(8, v, 'dateTimeEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[9];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(9, v, 'date');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateEqualNotAllowed() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[10];
	}

	set dateEqualNotAllowed(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(10, v, 'dateEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[11];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(11, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndEqualNotAllowed() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[12];
	}

	set dateExclusiveEndEqualNotAllowed(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(12, v, 'dateExclusiveEndEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[13];
	}

	set minutes(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(13, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesEqualNotAllowed() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[14];
	}

	set minutesEqualNotAllowed(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(14, v, 'minutesEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[15];
	}

	set hours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(15, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursEqualNotAllowed() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[16];
	}

	set hoursEqualNotAllowed(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(16, v, 'hoursEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[17];
	}

	set days(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(17, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysEqualNotAllowed() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[18];
	}

	set daysEqualNotAllowed(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(18, v, 'daysEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[19];
	}

	set months(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(19, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsEqualNotAllowed() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[20];
	}

	set monthsEqualNotAllowed(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(20, v, 'monthsEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[21];
	}

	set years(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(21, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsEqualNotAllowed() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[22];
	}

	set yearsEqualNotAllowed(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(22, v, 'yearsEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[23];
	}

	set duration(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(23, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationEqualNotAllowed() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[24];
	}

	set durationEqualNotAllowed(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(24, v, 'durationEqualNotAllowed');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[25];
	}

	set localTime(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(25, v, 'localTime');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeEqualNotAllowed() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[26];
	}

	set localTimeEqualNotAllowed(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(26, v, 'localTimeEqualNotAllowed');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 27);

			data[1] = 4128706800000;
			data[2] = 7.5;
			data[3] = 4128706800000;
			data[4] = 7;
			data[5] = 4128706800000;
			data[6] = 7;
			data[7] = 1609455600000;
			data[8] = 1605135600000;
			data[9] = 1609455600000;
			data[10] = 1605135600000;
			data[11] = 1609455600000;
			data[12] = 1605135600000;
			data[13] = 44;
			data[14] = 7;
			data[15] = 4128706800000;
			data[16] = 7;
			data[17] = 4128706800000;
			data[18] = 7;
			data[19] = 4128706800000;
			data[20] = 7;
			data[21] = 4128706800000;
			data[22] = 7;
			data[23] = 4128706800000;
			data[24] = 7;
			data[25] = 7200000;
			data[26] = 3600000;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '279';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '279', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMaxFailsCompareConst<'validated'> {
		// TODO: PLANO-151346
	}
}

		 
export class StoryBookApiValidationsMaxFailsCompareNode<ValidationMode extends 'draft' | 'validated' = 'validated'> extends ApiObjectWrapper<any, any>
{
	override parent : any = null;

	constructor(override readonly api : StoryBookApiService<ValidationMode> | null, idRaw : any = null) {
		super(api, StoryBookApiValidationsMaxFailsCompareNode as any);

		this._updateRawData(Meta.createNewObject(false, idRaw), true);

		// set parent attribute
	}


	private _id : Id | null = null;
	get id() : Id {
		return this._id !== null ? this._id : Id.create(Meta.getNewItemId(this.rawData) as any);
	}

	override attributeInfoThis : ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>> = new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'compareNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE',
		});
	attributeInfoNumberComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'numberComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
		});
	attributeInfoNumber =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, number>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'number',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_NUMBER',
			primitiveType: PApiPrimitiveTypes.number,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.numberComparedNode, true, PApiPrimitiveTypes.number, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE', undefined);
							return null;
					},
					() => {
						return this.api!.validators.maxDecimalPlacesCount(0, PApiPrimitiveTypes.number, undefined);
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_NUMBER_COMPARED_NODE«.',
			}
		});
	attributeInfoIntegerComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'integerComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Integer,
		});
	attributeInfoInteger =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Integer>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'integer',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_INTEGER',
			primitiveType: PApiPrimitiveTypes.Integer,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.integerComparedNode, true, PApiPrimitiveTypes.Integer, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_INTEGER_COMPARED_NODE«.',
			}
		});
	attributeInfoCurrencyComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'currencyComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Currency,
		});
	attributeInfoCurrency =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Currency>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'currency',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_CURRENCY',
			primitiveType: PApiPrimitiveTypes.Currency,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.currencyComparedNode, true, PApiPrimitiveTypes.Currency, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_CURRENCY_COMPARED_NODE«.',
			}
		});
	attributeInfoDateTimeComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'dateTimeComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.DateTime,
		});
	attributeInfoDateTime =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, DateTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'dateTime',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_TIME',
			primitiveType: PApiPrimitiveTypes.DateTime,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.dateTimeComparedNode, true, PApiPrimitiveTypes.DateTime, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_TIME_COMPARED_NODE«.',
			}
		});
	attributeInfoDateComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'dateComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Date,
		});
	attributeInfoDate =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Date>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'date',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE',
			primitiveType: PApiPrimitiveTypes.Date,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.dateComparedNode, true, PApiPrimitiveTypes.Date, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_COMPARED_NODE«.',
			}
		});
	attributeInfoDateExclusiveEndComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'dateExclusiveEndComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
		});
	attributeInfoDateExclusiveEnd =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, DateExclusiveEnd>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'dateExclusiveEnd',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END',
			primitiveType: PApiPrimitiveTypes.DateExclusiveEnd,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.dateExclusiveEndComparedNode, true, PApiPrimitiveTypes.DateExclusiveEnd, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_DATE_EXCLUSIVE_END_COMPARED_NODE«.',
			}
		});
	attributeInfoMinutesComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'minutesComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Minutes,
		});
	attributeInfoMinutes =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Minutes>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'minutes',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_MINUTES',
			primitiveType: PApiPrimitiveTypes.Minutes,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.minutesComparedNode, true, PApiPrimitiveTypes.Minutes, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_MINUTES_COMPARED_NODE«.',
			}
		});
	attributeInfoHoursComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'hoursComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Hours,
		});
	attributeInfoHours =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Hours>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'hours',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_HOURS',
			primitiveType: PApiPrimitiveTypes.Hours,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.hoursComparedNode, true, PApiPrimitiveTypes.Hours, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_HOURS_COMPARED_NODE«.',
			}
		});
	attributeInfoDaysComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'daysComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Days,
		});
	attributeInfoDays =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Days>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'days',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DAYS',
			primitiveType: PApiPrimitiveTypes.Days,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.daysComparedNode, true, PApiPrimitiveTypes.Days, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_DAYS_COMPARED_NODE«.',
			}
		});
	attributeInfoMonthsComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'monthsComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Months,
		});
	attributeInfoMonths =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Months>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'months',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_MONTHS',
			primitiveType: PApiPrimitiveTypes.Months,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.monthsComparedNode, true, PApiPrimitiveTypes.Months, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_MONTHS_COMPARED_NODE«.',
			}
		});
	attributeInfoYearsComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'yearsComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Years,
		});
	attributeInfoYears =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Years>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'years',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_YEARS',
			primitiveType: PApiPrimitiveTypes.Years,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.yearsComparedNode, true, PApiPrimitiveTypes.Years, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_YEARS_COMPARED_NODE«.',
			}
		});
	attributeInfoDurationComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'durationComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.Duration,
		});
	attributeInfoDuration =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, Duration>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'duration',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DURATION',
			primitiveType: PApiPrimitiveTypes.Duration,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.durationComparedNode, true, PApiPrimitiveTypes.Duration, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_DURATION_COMPARED_NODE«.',
			}
		});
	attributeInfoLocalTimeComparedNode =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'localTimeComparedNode',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE',
			primitiveType: PApiPrimitiveTypes.LocalTime,
		});
	attributeInfoLocalTime =  new ApiAttributeInfo<StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>, LocalTime>({
			apiObjWrapper: this as any as StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>,
			name: 'localTime',
			id: 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_LOCAL_TIME',
			primitiveType: PApiPrimitiveTypes.LocalTime,
			validations: function(this : StoryBookApiValidationsMaxFailsCompareNode<ValidationMode>) {
				return [
					() => {
		return this.api!.validators.max(() => this.localTimeComparedNode, true, PApiPrimitiveTypes.LocalTime, 'VALIDATIONS_MAX_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE', undefined);
							return null;
					},
				];
			},
			vars: {
				expectedValidationError: 'Diese Eingabe darf nicht größer sein als »VALIDATIONS_MAX_FAILS_COMPARE_NODE_LOCAL_TIME_COMPARED_NODE«.',
			}
		});

	/**
     * 
	 *
	 * @type {number}
     */
	get numberComparedNode() : NullableInDraftMode<number, ValidationMode> {
		return this.data[1];
	}

	set numberComparedNode(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(1, v, 'numberComparedNode');
	}

	/**
     * 
	 *
	 * @type {number}
     */
	get number() : NullableInDraftMode<number, ValidationMode> {
		return this.data[2];
	}

	set number(v : NullableInDraftMode<number, ValidationMode>) {
        this.setterImpl(2, v, 'number');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integerComparedNode() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[3];
	}

	set integerComparedNode(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(3, v, 'integerComparedNode');
	}

	/**
     * 
	 *
	 * @type {Integer}
     */
	get integer() : NullableInDraftMode<Integer, ValidationMode> {
		return this.data[4];
	}

	set integer(v : NullableInDraftMode<Integer, ValidationMode>) {
        this.setterImpl(4, v, 'integer');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currencyComparedNode() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[5];
	}

	set currencyComparedNode(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(5, v, 'currencyComparedNode');
	}

	/**
     * 
	 *
	 * @type {Currency}
     */
	get currency() : NullableInDraftMode<Currency, ValidationMode> {
		return this.data[6];
	}

	set currency(v : NullableInDraftMode<Currency, ValidationMode>) {
        this.setterImpl(6, v, 'currency');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTimeComparedNode() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[7];
	}

	set dateTimeComparedNode(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(7, v, 'dateTimeComparedNode');
	}

	/**
     * 
	 *
	 * @type {DateTime}
     */
	get dateTime() : NullableInDraftMode<DateTime, ValidationMode> {
		return this.data[8];
	}

	set dateTime(v : NullableInDraftMode<DateTime, ValidationMode>) {
        this.setterImpl(8, v, 'dateTime');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get dateComparedNode() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[9];
	}

	set dateComparedNode(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(9, v, 'dateComparedNode');
	}

	/**
     * 
	 *
	 * @type {Date}
     */
	get date() : NullableInDraftMode<Date, ValidationMode> {
		return this.data[10];
	}

	set date(v : NullableInDraftMode<Date, ValidationMode>) {
        this.setterImpl(10, v, 'date');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEndComparedNode() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[11];
	}

	set dateExclusiveEndComparedNode(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(11, v, 'dateExclusiveEndComparedNode');
	}

	/**
     * 
	 *
	 * @type {DateExclusiveEnd}
     */
	get dateExclusiveEnd() : NullableInDraftMode<DateExclusiveEnd, ValidationMode> {
		return this.data[12];
	}

	set dateExclusiveEnd(v : NullableInDraftMode<DateExclusiveEnd, ValidationMode>) {
        this.setterImpl(12, v, 'dateExclusiveEnd');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutesComparedNode() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[13];
	}

	set minutesComparedNode(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(13, v, 'minutesComparedNode');
	}

	/**
     * 
	 *
	 * @type {Minutes}
     */
	get minutes() : NullableInDraftMode<Minutes, ValidationMode> {
		return this.data[14];
	}

	set minutes(v : NullableInDraftMode<Minutes, ValidationMode>) {
        this.setterImpl(14, v, 'minutes');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hoursComparedNode() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[15];
	}

	set hoursComparedNode(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(15, v, 'hoursComparedNode');
	}

	/**
     * 
	 *
	 * @type {Hours}
     */
	get hours() : NullableInDraftMode<Hours, ValidationMode> {
		return this.data[16];
	}

	set hours(v : NullableInDraftMode<Hours, ValidationMode>) {
        this.setterImpl(16, v, 'hours');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get daysComparedNode() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[17];
	}

	set daysComparedNode(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(17, v, 'daysComparedNode');
	}

	/**
     * 
	 *
	 * @type {Days}
     */
	get days() : NullableInDraftMode<Days, ValidationMode> {
		return this.data[18];
	}

	set days(v : NullableInDraftMode<Days, ValidationMode>) {
        this.setterImpl(18, v, 'days');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get monthsComparedNode() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[19];
	}

	set monthsComparedNode(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(19, v, 'monthsComparedNode');
	}

	/**
     * 
	 *
	 * @type {Months}
     */
	get months() : NullableInDraftMode<Months, ValidationMode> {
		return this.data[20];
	}

	set months(v : NullableInDraftMode<Months, ValidationMode>) {
        this.setterImpl(20, v, 'months');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get yearsComparedNode() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[21];
	}

	set yearsComparedNode(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(21, v, 'yearsComparedNode');
	}

	/**
     * 
	 *
	 * @type {Years}
     */
	get years() : NullableInDraftMode<Years, ValidationMode> {
		return this.data[22];
	}

	set years(v : NullableInDraftMode<Years, ValidationMode>) {
        this.setterImpl(22, v, 'years');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get durationComparedNode() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[23];
	}

	set durationComparedNode(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(23, v, 'durationComparedNode');
	}

	/**
     * 
	 *
	 * @type {Duration}
     */
	get duration() : NullableInDraftMode<Duration, ValidationMode> {
		return this.data[24];
	}

	set duration(v : NullableInDraftMode<Duration, ValidationMode>) {
        this.setterImpl(24, v, 'duration');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTimeComparedNode() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[25];
	}

	set localTimeComparedNode(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(25, v, 'localTimeComparedNode');
	}

	/**
     * 
	 *
	 * @type {LocalTime}
     */
	get localTime() : NullableInDraftMode<LocalTime, ValidationMode> {
		return this.data[26];
	}

	set localTime(v : NullableInDraftMode<LocalTime, ValidationMode>) {
        this.setterImpl(26, v, 'localTime');
	}


	_fixIds(_idReplacements : Map<any, number>) : void {
	}

	override _updateRawData(data : any[] | null, generateMissingData : boolean) : void {
		super._updateRawData(data, generateMissingData);

		this.data = data;

		// update id wrapper
		const idRawData = Meta.getId(data);
		this._id = idRawData === null ? null : Id.create(idRawData as any);

		// create missing/default data
		if(generateMissingData && data) {
			this.fillWithDefaultValues(data, 27);

			data[1] = 7;
			data[2] = 4128706800000;
			data[3] = 7;
			data[4] = 4128706800000;
			data[5] = 7;
			data[6] = 4128706800000;
			data[7] = 1577833200000;
			data[8] = 1577919600000;
			data[9] = 1577833200000;
			data[10] = 1577919600000;
			data[11] = 1577833200000;
			data[12] = 1577919600000;
			data[13] = 7;
			data[14] = 99999999999999;
			data[15] = 7;
			data[16] = 4128706800000;
			data[17] = 7;
			data[18] = 4128706800000;
			data[19] = 7;
			data[20] = 4128706800000;
			data[21] = 7;
			data[22] = 4128706800000;
			data[23] = 7;
			data[24] = 4128706800000;
			data[25] = 3600000;
			data[26] = 7200000;
		}

		// propagate new raw data to children
	}

	protected get dni() : string {
		return '280';
	}

	static loadDetailed(	api : StoryBookApiService<any>
						,	id : Id
						,	{success = null, error = null, searchParams = null} : ApiLoadArgs = {}) : Promise<HttpResponse<unknown>> {
		return ApiObjectWrapper.loadDetailedImpl(api, id, '280', { success: success, error: error, searchParams: searchParams});
	}

	protected assumeValidated() : asserts this is StoryBookApiValidationsMaxFailsCompareNode<'validated'> {
		// TODO: PLANO-151346
	}
}



